package com.merits.modules.base.dao;

// IMPORTS ---------------------------------------------------------------------

import java.sql.ResultSet;
import java.sql.Timestamp;


import com.weezzi.utils.DatabaseType;
import com.weezzi.core.dbmanager.dao.DAOParameters;
import com.weezzi.core.dbmanager.dao.SpecialQueryDAO;
import com.weezzi.core.dbmanager.dao.SingleRecordDAO;
import com.weezzi.core.data.*;
import com.weezzi.utils.extras.cache.WeezziCacheObjectType;




/**
 * <b>Title: </b>Shop Goodtype Data Transfer Object<br/>
 * <b>Description: </b>Shop Goodtype DTO Class<br/>
 * <b>Copyright: </b>Copyright (c) 2020 Overture Software<br/>
 * <b>Company: </b><A HREF="http://www.overturesoftware.com">Overture Software</A><br/>
 *
 * @author AUTO-GENERATED By Weezzi Builder
 * @version 1.0
 */
@SuppressWarnings("unused")
public class ShopGoodtypesShopGoodSPQ extends SpecialQueryDAO {


	// CONSTANTS ---------------------------------------------------------------

	
	public static final String CACHE_PREFIX = "S6_0#";
	private static final long serialVersionUID = 1L;


    // PROPERTIES -------------------------------------------------------------


	// Special Query Fields	
    // Shop Good Identifier
    private long id;
    // Shop Good Name
    private String name;


    // CONSTRUCTORS -----------------------------------------------------------


	/**
	 * Empty Constructor
	 **/
	public ShopGoodtypesShopGoodSPQ() {
        // Set cache object type
		this.setCacheObjectType(WeezziCacheObjectType.SpecialQuery);
	}
	
	// SPECIAL QUERY METHODS --------------------------------------------------


    /**
     * Shop Goodtype Bean Field Constructor
     * @param id long Shop Goodtypes Identifier
     * @param name String Shop Goodtypes Name
     */
    public ShopGoodtypesShopGoodSPQ(long id, String name) {
        // Call default constructor
        this();
        // Set Shop Goodtypes Identifier
        setId(id);
        // Set Shop Goodtypes Name
        setName(name);
    }


    // GETTERS -----------------------------------------------------------------


    /**
     * Get Shop Goodtypes Identifier
     * @return long Shop Goodtypes Identifier
     */
    public long getId() {
        return this.id;
    }


    /**
     * Get Shop Goodtypes Name
     * @return String Shop Goodtypes Name
     */
    public String getName() {
        return this.name;
    }


    // SETTERS -----------------------------------------------------------------


    /**
     * Set Shop Goodtypes Identifier
     * @param id long Shop Goodtypes Identifier
     */
    public void setId(long id) {
        this.id = id;
    }


    /**
     * Set Shop Goodtypes Name
     * @param name String Shop Goodtypes Name
     */
    public void setName(String name) {
        this.name = name;
    }


   


    // CACHING ----------------------------------------------------------------
    
    
	/**
	 * Gets cachePrefix
	 * @return The cachePrefix of this object
	 */
	public String getCachePrefix() {
		return CACHE_PREFIX;
	}

    // DATABASE MANAGER SPECIFIC ----------------------------------------------

    
    /**
     * Gets DB Connection name
     * @return project database connection name;
     */
    public String getDBConnectionName() {
    	return "Merits_Merits";
    }


    public void fillValuesFromResultSet(ResultSet resultset) throws Exception {
        // Set Shop Goodtypes Identifier
        this.setId(resultset.getLong("ID"));
        // Set Shop Goodtypes Name
        this.setName(resultset.getString("NAME"));
    }

	
	// SPECIAL QUERY PARAMETERS OBJECT CLASS ----------------------------------
	
	
	/**
	 * Shop Goodtype 
	 */
	public class Parameters extends DAOParameters {

		
		// Properties .........................................................

		
        // Shop Good Shop Id
        public long shopId;
        // Shop Good Lang Code
        public String langCode;

		
		// Constructors .......................................................


    public Parameters(long shopId, String langCode) {
            this.shopId = shopId;
            this.langCode = langCode;
    }



        // DAO Parameters .....................................................


        /**
         * Gets the search fields
         * @return
         */
		public Object[] getSearchFields() {
			// Local Variables
			return new Object[] {shopId, langCode};
		}
	
	
		/**
		 * Gets the object cache keys
		 * @return cacheKeys
		 */
		public String[] getCacheKeys() {
			return null;
		}
		
	}
}
