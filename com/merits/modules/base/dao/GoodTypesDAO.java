package com.merits.modules.base.dao;

// IMPORTS ---------------------------------------------------------------------

import com.weezzi.core.data.*;
import com.weezzi.core.dbmanager.dao.SingleRecordDAO;
import com.weezzi.utils.StringUtilities;
import com.weezzi.utils.extras.cache.WeezziCacheObjectType;
import com.weezzi.utils.extras.console.Console;


import java.sql.CallableStatement;
import java.sql.ResultSet;



/**
 * <b>Title: </b>Good Type Data Access Object<br/>
 * <b>Description: </b>Good Type DAO Class<br/>
 *
 * @author AUTO-GENERATED By Weezzi Builder
 * @version 1.0
 */
public class GoodTypesDAO extends SingleRecordDAO {


	// CONSTANTS --------------------------------------------------------------

	
	public static final String CACHE_PREFIX = "D2#";
	private static final long serialVersionUID = 1l;


    // MULTI-LANGUAGE ---------------------------------------------------------


    /**
     *  Multi-Language
     */
    public enum MultiLanguageFields {
        Name("SMALL_TEXT1"),
        ;

        private String column;

        MultiLanguageFields(String column) {
        	this.column = column;
        }

        public String getColumnName() {
        	return column;
        }
	}


    // DATA TYPE ENUMERATION --------------------------------------------------


    /**
     *  DAO Search Type
     */
    public enum SearchType {

    	// Single Record Queries

		;
    	
        private String cachePrefix;
        
        SearchType(String cachePrefix) {
        	this.cachePrefix = cachePrefix;
        }

        /**
         * Gets cache prefix
         **/
        public String toString() {
        	return cachePrefix;
        }
    }


    // PROPERTIES --------------------------------------------------------------

    // Good Types Identifier
    private long id;
    // Good Types Name
    private String name;
    // Good Types Order Number
    private long orderNumber;
    // Good Types Edit Info
    private EditInfo editInfo;
    // Multilanguage identifier
    private long multilangKeyId;
    // Multilanguage Translated Languages
    private String multilangKeyTranslations;


    // CONSTRUCTORS ------------------------------------------------------------


	/**
	 * Empty Constructor
	 **/
	public GoodTypesDAO() {
        // Set cache object type
		this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
	}


	/**
	 * Type Constructor
	 **/
	public GoodTypesDAO(SearchType type) {
        // Set DAO Search type
        this.setSearchType(type);
        // Set cache object type
		this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
	}
	
	
    /**
     * Good Type Bean Field Constructor
     * @param id long Good Types Identifier
     */
    public GoodTypesDAO(long id) {
        // Set cache object type
        this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
        // Set Good Types Identifier
        setId(id);
    }


    /**
     * Good Type Bean Field Constructor
     * @param id long Good Types Identifier
     * @param name String Good Types Name
     * @param editInfo EditInfo Good Types Edit Info
     */
    public GoodTypesDAO(long id, String name, EditInfo editInfo) {
        // Set cache object type
        this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
        // Set Good Types Identifier
        setId(id);
        // Set Good Types Name
        setName(name);
        // Set Good Types Edit Info
        setEditInfo(editInfo);
    }


    

    
    // TYPE -------------------------------------------------------------------

    
    /**
     * Sets DAO search type
     * @param type
     */
    public void setSearchType(SearchType type) {
    	// Sets DAO type
    	super.setSearchType(type);
    }


	// GETTERS -----------------------------------------------------------------


    /**
     * Get Good Types Identifier
     * @return long Good Types Identifier
     */
    public long getId() {
        return this.id;
    }


    /**
     * Get Good Types Name
     * @return String Good Types Name
     */
    public String getName() {
        return this.name;
    }


    /**
     * Get Good Types Order Number
     * @return long Good Types Order Number
     */
    public long getOrderNumber() {
        return this.orderNumber;
    }


    /**
     * Get Good Types Edit Info
     * @return EditInfo Good Types Edit Info
     */
    public EditInfo getEditInfo() {
        return this.editInfo;
    }


    /**
     * Get Multi-Language Identifier
     * @return long Multi-Language Identifier
     */
    public long getMultiLangKeyId() {
        return this.multilangKeyId;
    }


    /**
     * Get Multi-Language Translated Languages
     * @return long Multi-Language Translated Languages
     */
    public String getMultiLangKeyTranslations() {
        return this.multilangKeyTranslations;
    }



	// SETTERS -----------------------------------------------------------------


    /**
     * Set Good Types Identifier
     * @param id long Good Types Identifier
     */
    public void setId(long id) {
        this.id = id;
    }


    /**
     * Set Good Types Name
     * @param name String Good Types Name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * Set Good Types Order Number
     * @param orderNumber long Good Types Order Number
     */
    public void setOrderNumber(long orderNumber) {
        this.orderNumber = orderNumber;
    }


    /**
     * Set Good Types Edit Info
     * @param editInfo EditInfo Good Types Edit Info
     */
    public void setEditInfo(EditInfo editInfo) {
        this.editInfo = editInfo;
    }


    /**
     * Set Multi Language Identifier
     * @return long Multi Language Identifier
     */
    public void setMultiLangKeyId(long multilangKeyId) {
        this.multilangKeyId = multilangKeyId;
    }


    /**
     * Set Multi Language Translated Languages
     * @return String Multi Language Translated Languages
     */
    public void setMultiLangKeyTranslations(String languages) {
        this.multilangKeyTranslations = languages;
    }



    // MULTI-LANGUAGE ---------------------------------------------------------


    /**
     * Gets the default non-nullable multi-language fields
     * @return
     **/
    public MultiLanguageFields[] getMultiLangKeyDefaultTranslationFields() {
        return new MultiLanguageFields[] {MultiLanguageFields.Name};
    }


	// DAO ID -----------------------------------------------------------------

    
    /**
     * Checks if has Id Field
     */
    public boolean hasIdField() {
    	return true;
    }

    
    /**
     * Sets Id
     * @param id
     */
    public void setId(Long id) {
        this.id = id;
    }


    // CACHING ----------------------------------------------------------------
    
    
	/**
	 * Gets cachePrefix
	 * @return The cachePrefix of this object
	 */
	public String getCachePrefix() {
		return CACHE_PREFIX;
	}
	
	
	/**
	 * Gets the object cache keys
	 * @return cacheKeys
	 */
	public String[] getCacheKeys() {
		if (getParameters() != null) {
			return getParameters().getCacheKeys();
		}
		return null;
	}
	

    // DATABASE MANAGER SPECIFIC ----------------------------------------------

    
    /**
     * Gets table name
     */
    public String getTableName() {
    	return "GOOD_TYPES";
    }

    
    /**
     * Gets DB Connection name
     * @return project database connection name;
     */
    public String getDBConnectionName() {
    	return "Merits_Merits";
    }

    
    /**
     * Gets Insert query SQL
     * @return Insert SQL
     */
    public String getInsertSQL() {
    	// SQL
    	return "INSERT INTO GOOD_TYPES (`ORDER_NUMBER`, `EDIT_INFO_CREATE_DATE`, `EDIT_INFO_CREATE_USER`, `EDIT_INFO_UPDATE_DATE`, `EDIT_INFO_UPDATE_USER`, `MLK_ID`, `MLK_LANGS`) values ((SELECT coalesce(MAX(ORDER_NUMBER) + 1,1) FROM (SELECT ORDER_NUMBER FROM GOOD_TYPES) AS SUBQRY), ?, ?, ?, ?, ?, ?)";
    }

    
    /**
     * Gets Insert procedure
     */
    public String getInsertProcedureName() {
    	return "GOOD_TYPES_PROC(?, ?, ?)";
    }


	// RESULTSETS & STATEMENTS ------------------------------------------------
	    
    
    /**
     * Fills insert fields
     * @param statement
     */
    public void fillStatementFieldsForInsert(CallableStatement statement) throws Exception {
        // Check if edit info create date is Null
        if (editInfo.getCreateDate() == null) {
            statement.setNull(1, java.sql.Types.TIMESTAMP);
        } else {
            // Set create date
            statement.setTimestamp(1, editInfo.getCreateDate());
        } 
        // Check if edit info create user is Null
        if (editInfo.getCreateUserId() == null) {
            statement.setNull(2, java.sql.Types.NUMERIC);
        } else {
            // Set create user
            statement.setLong(2, editInfo.getCreateUserId());
        } 
        // Check if edit info update date is Null
        if (editInfo.getUpdateDate() == null) {
            statement.setNull(3, java.sql.Types.TIMESTAMP);
        } else {
            // Set update date
            statement.setTimestamp(3, editInfo.getUpdateDate());
        } 
        // Check if edit info update user is Null
        if (editInfo.getUpdateUserId() == null) {
            statement.setNull(4, java.sql.Types.NUMERIC);
        } else {
            // Set update user
            statement.setLong(4, editInfo.getUpdateUserId());
        } 
        // Set Multilanguage key
        statement.setLong(5, multilangKeyId);
        // Set Multilanguage Translations
        statement.setString(6, multilangKeyTranslations);
    }


    /**
     * Sets DAO values from a resultset 
     * @param resultset
     */
    public void fillValuesFromResultSet(ResultSet resultset) throws Exception {
        // Set Good Types Identifier
        this.setId(resultset.getLong("ID"));
        this.setName(resultset.getString("NAME"));
        // Set Good Types Order Number
        this.setOrderNumber(resultset.getLong("ORDER_NUMBER"));
        // Set Good Types Edit Info
        this.editInfo = new EditInfo();
        editInfo.setCreateDate(resultset.getTimestamp("EDIT_INFO_CREATE_DATE"));
        // Check if was null
        if (resultset.wasNull()) {
            editInfo.setCreateDate(null);
        }
        editInfo.setCreateUserId(resultset.getLong("EDIT_INFO_CREATE_USER"));
        // Check if was null
        if (resultset.wasNull()) {
            editInfo.setCreateUserId(null);
        }
        editInfo.setUpdateDate(resultset.getTimestamp("EDIT_INFO_UPDATE_DATE"));
        // Check if was null
        if (resultset.wasNull()) {
            editInfo.setUpdateDate(null);
        }
        editInfo.setUpdateUserId(resultset.getLong("EDIT_INFO_UPDATE_USER"));
        // Check if was null
        if (resultset.wasNull()) {
            editInfo.setUpdateUserId(null);
        }
        // Set Good Types Multi Lang Key Id
        this.setMultiLangKeyId(resultset.getLong("MLK_ID"));
        // Set Good Types Multi Lang Key Translations
        this.setMultiLangKeyTranslations(resultset.getString("MLK_LANGS"));
        // Check if was null
        if (resultset.wasNull()) {
            this.setMultiLangKeyTranslations(null);
        }
    }

    
    // ------------------------------------------------------------------------
    // PARAMETERS CLASSES -----------------------------------------------------
    // ------------------------------------------------------------------------


}
