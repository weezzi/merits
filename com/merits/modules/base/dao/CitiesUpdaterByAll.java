package com.merits.modules.base.dao;

// IMPORTS ---------------------------------------------------------------------

import java.sql.CallableStatement;
import java.sql.Timestamp;

import com.weezzi.core.data.*;
import com.weezzi.core.dbmanager.dao.UpdaterDAO;
import com.weezzi.utils.StringUtilities;


/**
 * <b>Title: </b>City Updater Object<br/>
 * <b>Description: </b>City Updater Class<br/>
 *
 * @author AUTO-GENERATED By Weezzi Builder
 * @version 1.0
 */
 @SuppressWarnings("unused")
public class CitiesUpdaterByAll implements UpdaterDAO {


    // PROPERTIES --------------------------------------------------------------

    private long id;
    private String name;
    private GeoLocation geoLocation;
    private UpdateInfo _updateInfo;


    // CONSTRUCTORS ------------------------------------------------------------


	/**
	 * Empty Constructor
	 **/
	public CitiesUpdaterByAll(long id, String name, GeoLocation geoLocation, UpdateInfo updateInfo) {
        this.id = id;
        this.name = name;
        this.geoLocation = geoLocation;
        this._updateInfo = updateInfo;
	}


	// PUBLIC -----------------------------------------------------------------

	
    /**
     * Gets DB Connection name
     * @return project database connection name;
     */
	public String getDBConnectionName() {
		return "Merits_Merits";
	}


	/**
	 * Gets update SQL
	 * @return query
	 */
	public String getQuerySQL() {
		return "UPDATE CITIES " +
               " SET NAME = ? , GEO_LOCATION_COUNTRY  = ? , GEO_LOCATION_REGION  = ? , GEO_LOCATION_CITY  = ? , GEO_LOCATION_LAT  = ? , GEO_LOCATION_LONG  = ? , EDIT_INFO_UPDATE_DATE  = ? , EDIT_INFO_UPDATE_USER  = ?  " +
               " WHERE  ID = ?";
	}
	
	
	/**
	 * Updates Query Fields
	 * @param statment
	 * @throws Exception
	 */
	public void updateFields(CallableStatement statement) throws Exception {
        // Set Fields
        statement.setString(1, StringUtilities.capString(name, 100));
        // Check if location is not null
        if (geoLocation != null) {
            // Country
            if (geoLocation.getCountryId() != null) {
                statement.setLong(2, geoLocation.getCountryId());
            } else {
                statement.setNull(2, java.sql.Types.INTEGER);
            }
            // Region
            if (geoLocation.getRegionId() != null) {
                statement.setLong(3, geoLocation.getRegionId());
            } else {
                statement.setNull(3, java.sql.Types.INTEGER);
            }
            // City
            if (geoLocation.getCityId() != null) {
                statement.setLong(4, geoLocation.getCityId());
            } else {
                statement.setNull(4, java.sql.Types.INTEGER);
            }
            // Latitude
            if (geoLocation.getLatitude() != null) {
                statement.setFloat(5, geoLocation.getLatitude());
            } else {
                statement.setNull(5, java.sql.Types.INTEGER);
            }
            // Longitude
            if (geoLocation.getLongitude() != null) {
                statement.setFloat(6, geoLocation.getLongitude());
            } else {
                statement.setNull(6, java.sql.Types.INTEGER);
            }
        } else {
            // Set country id
            statement.setNull(2, java.sql.Types.INTEGER);
            // Set region
            statement.setNull(3, java.sql.Types.INTEGER);
            // Set city
            statement.setNull(4, java.sql.Types.INTEGER);
            // Set latitude
            statement.setNull(5, java.sql.Types.INTEGER);
            // Set longitude
            statement.setNull(6, java.sql.Types.INTEGER);
        }
        // Check if edit info update date is Null
        if (_updateInfo.getUpdateDate() == null) {
            statement.setNull(7, java.sql.Types.TIMESTAMP);
        } else {
            // Set update date
            statement.setTimestamp(7,  _updateInfo.getUpdateDate());
        } 
        // Check if edit info update user is Null
        if (_updateInfo.getUpdateUserId() == null) {
            statement.setNull(8, java.sql.Types.NUMERIC);
        } else {
            // Set update user
            statement.setLong(8, _updateInfo.getUpdateUserId());
        } 
        statement.setLong(9, id);
	}


	/**
	 * Gets extended update SQL
	 * @return query
	 */
	public String getExtendedQuerySQL() {
		return null;
	}
	
	
	/**
	 * Updates Extended Query Fields
	 * @param statment
	 * @throws Exception
	 */
	public void updateExtendedQueryFields(CallableStatement statement) throws Exception {
	}
	
	
}
