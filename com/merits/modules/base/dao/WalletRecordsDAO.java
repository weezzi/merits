package com.merits.modules.base.dao;

// IMPORTS ---------------------------------------------------------------------

import com.weezzi.core.data.*;
import com.weezzi.core.dbmanager.dao.SingleRecordDAO;
import com.weezzi.utils.StringUtilities;
import com.weezzi.utils.extras.cache.WeezziCacheObjectType;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.core.dbmanager.dao.DAOParameters;
import com.merits.modules.base.uobjects.enums.WalletType;
import com.merits.modules.base.uobjects.enums.WalletOperation;
import com.merits.modules.base.uobjects.enums.WalletType;


import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;



/**
 * <b>Title: </b>Wallet Record Data Access Object<br/>
 * <b>Description: </b>Wallet Record DAO Class<br/>
 *
 * @author AUTO-GENERATED By Weezzi Builder
 * @version 1.0
 */
public class WalletRecordsDAO extends SingleRecordDAO {


	// CONSTANTS --------------------------------------------------------------

	
	public static final String CACHE_PREFIX = "D1#";
	private static final long serialVersionUID = 1l;


    // MULTI-LANGUAGE ---------------------------------------------------------


    /**
     *  Multi-Language
     */
    public enum MultiLanguageFields {
        ;

        private String column;

        MultiLanguageFields(String column) {
        	this.column = column;
        }

        public String getColumnName() {
        	return column;
        }
	}


    // DATA TYPE ENUMERATION --------------------------------------------------


    /**
     *  DAO Search Type
     */
    public enum SearchType {

    	// Single Record Queries
        Transaction("Q1"),

		;
    	
        private String cachePrefix;
        
        SearchType(String cachePrefix) {
        	this.cachePrefix = cachePrefix;
        }

        /**
         * Gets cache prefix
         **/
        public String toString() {
        	return cachePrefix;
        }
    }


    // PROPERTIES --------------------------------------------------------------

    // Wallet Records Identifier
    private long id;
    // Wallet Records Wallet Identifier
    private long idWallet;
    // Wallet Records Wallet Type
    private WalletType walletType;
    // Wallet Records Transaction Date
    private Timestamp transactionDate;
    // Wallet Records Operation
    private WalletOperation operation;
    // Wallet Records Transaction Value
    private float transactionValue;
    // Wallet Records Ref Wallet
    private long refWallet;
    // Wallet Records Ref Wallet Type
    private WalletType refWalletType;
    // Wallet Records Ref Name
    private String refName;


    // CONSTRUCTORS ------------------------------------------------------------


	/**
	 * Empty Constructor
	 **/
	public WalletRecordsDAO() {
        // Set cache object type
		this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
	}


	/**
	 * Type Constructor
	 **/
	public WalletRecordsDAO(SearchType type) {
        // Set DAO Search type
        this.setSearchType(type);
        // Set cache object type
		this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
	}
	
	
    /**
     * Wallet Record Bean Field Constructor
     * @param id long Wallet Records Identifier
     */
    public WalletRecordsDAO(long id) {
        // Set cache object type
        this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
        // Set Wallet Records Identifier
        setId(id);
    }


    /**
     * Wallet Record Bean Field Constructor
     * @param id long Wallet Records Identifier
     * @param idWallet long Wallet Records Wallet Identifier
     * @param walletType WalletType Wallet Records Wallet Type
     * @param transactionDate Timestamp Wallet Records Transaction Date
     * @param operation WalletOperation Wallet Records Operation
     * @param transactionValue float Wallet Records Transaction Value
     * @param refWallet long Wallet Records Ref Wallet
     * @param refWalletType WalletType Wallet Records Ref Wallet Type
     */
    public WalletRecordsDAO(long id, long idWallet, WalletType walletType
                    , Timestamp transactionDate, WalletOperation operation, float transactionValue
                    , long refWallet, WalletType refWalletType) {
        // Set cache object type
        this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
        // Set Wallet Records Identifier
        setId(id);
        // Set Wallet Records Wallet Identifier
        setIdWallet(idWallet);
        // Set Wallet Records Wallet Type
        setWalletType(walletType);
        // Set Wallet Records Transaction Date
        setTransactionDate(transactionDate);
        // Set Wallet Records Operation
        setOperation(operation);
        // Set Wallet Records Transaction Value
        setTransactionValue(transactionValue);
        // Set Wallet Records Ref Wallet
        setRefWallet(refWallet);
        // Set Wallet Records Ref Wallet Type
        setRefWalletType(refWalletType);
    }


    /**
     * Wallet Record Bean Field Constructor
     * @param id long Wallet Records Identifier
     * @param idWallet long Wallet Records Wallet Identifier
     * @param walletType WalletType Wallet Records Wallet Type
     * @param transactionDate Timestamp Wallet Records Transaction Date
     * @param operation WalletOperation Wallet Records Operation
     * @param transactionValue float Wallet Records Transaction Value
     * @param refWallet long Wallet Records Ref Wallet
     * @param refWalletType WalletType Wallet Records Ref Wallet Type
     * @param refName String Wallet Records Ref Name
     */
    public WalletRecordsDAO(long id, long idWallet, WalletType walletType
                    , Timestamp transactionDate, WalletOperation operation, float transactionValue
                    , long refWallet, WalletType refWalletType, String refName) {
        // Set cache object type
        this.setCacheObjectType(WeezziCacheObjectType.SingleRecord);
        // Set Wallet Records Identifier
        setId(id);
        // Set Wallet Records Wallet Identifier
        setIdWallet(idWallet);
        // Set Wallet Records Wallet Type
        setWalletType(walletType);
        // Set Wallet Records Transaction Date
        setTransactionDate(transactionDate);
        // Set Wallet Records Operation
        setOperation(operation);
        // Set Wallet Records Transaction Value
        setTransactionValue(transactionValue);
        // Set Wallet Records Ref Wallet
        setRefWallet(refWallet);
        // Set Wallet Records Ref Wallet Type
        setRefWalletType(refWalletType);
        // Set Wallet Records Ref Name
        setRefName(refName);
    }


    

    
    // TYPE -------------------------------------------------------------------

    
    /**
     * Sets DAO search type
     * @param type
     */
    public void setSearchType(SearchType type) {
    	// Sets DAO type
    	super.setSearchType(type);
    }


	// GETTERS -----------------------------------------------------------------


    /**
     * Get Wallet Records Identifier
     * @return long Wallet Records Identifier
     */
    public long getId() {
        return this.id;
    }


    /**
     * Get Wallet Records Wallet Identifier
     * @return long Wallet Records Wallet Identifier
     */
    public long getIdWallet() {
        return this.idWallet;
    }


    /**
     * Get Wallet Records Wallet Type
     * @return WalletType Wallet Records Wallet Type
     */
    public WalletType getWalletType() {
        return this.walletType;
    }


    /**
     * Get Wallet Records Transaction Date
     * @return Timestamp Wallet Records Transaction Date
     */
    public Timestamp getTransactionDate() {
        return this.transactionDate;
    }


    /**
     * Get Wallet Records Operation
     * @return WalletOperation Wallet Records Operation
     */
    public WalletOperation getOperation() {
        return this.operation;
    }


    /**
     * Get Wallet Records Transaction Value
     * @return float Wallet Records Transaction Value
     */
    public float getTransactionValue() {
        return this.transactionValue;
    }


    /**
     * Get Wallet Records Ref Wallet
     * @return long Wallet Records Ref Wallet
     */
    public long getRefWallet() {
        return this.refWallet;
    }


    /**
     * Get Wallet Records Ref Wallet Type
     * @return WalletType Wallet Records Ref Wallet Type
     */
    public WalletType getRefWalletType() {
        return this.refWalletType;
    }


    /**
     * Get Wallet Records Ref Name
     * @return String Wallet Records Ref Name
     */
    public String getRefName() {
        return this.refName;
    }



	// SETTERS -----------------------------------------------------------------


    /**
     * Set Wallet Records Identifier
     * @param id long Wallet Records Identifier
     */
    public void setId(long id) {
        this.id = id;
    }


    /**
     * Set Wallet Records Wallet Identifier
     * @param idWallet long Wallet Records Wallet Identifier
     */
    public void setIdWallet(long idWallet) {
        this.idWallet = idWallet;
    }


    /**
     * Set Wallet Records Wallet Type
     * @param walletType WalletType Wallet Records Wallet Type
     */
    public void setWalletType(WalletType walletType) {
        this.walletType = walletType;
    }


    /**
     * Set Wallet Records Transaction Date
     * @param transactionDate Timestamp Wallet Records Transaction Date
     */
    public void setTransactionDate(Timestamp transactionDate) {
        this.transactionDate = transactionDate;
    }


    /**
     * Set Wallet Records Operation
     * @param operation WalletOperation Wallet Records Operation
     */
    public void setOperation(WalletOperation operation) {
        this.operation = operation;
    }


    /**
     * Set Wallet Records Transaction Value
     * @param transactionValue float Wallet Records Transaction Value
     */
    public void setTransactionValue(float transactionValue) {
        this.transactionValue = transactionValue;
    }


    /**
     * Set Wallet Records Ref Wallet
     * @param refWallet long Wallet Records Ref Wallet
     */
    public void setRefWallet(long refWallet) {
        this.refWallet = refWallet;
    }


    /**
     * Set Wallet Records Ref Wallet Type
     * @param refWalletType WalletType Wallet Records Ref Wallet Type
     */
    public void setRefWalletType(WalletType refWalletType) {
        this.refWalletType = refWalletType;
    }


    /**
     * Set Wallet Records Ref Name
     * @param refName String Wallet Records Ref Name
     */
    public void setRefName(String refName) {
        this.refName = refName;
    }



    // MULTI-LANGUAGE ---------------------------------------------------------



	// DAO ID -----------------------------------------------------------------

    
    /**
     * Checks if has Id Field
     */
    public boolean hasIdField() {
    	return true;
    }

    
    /**
     * Sets Id
     * @param id
     */
    public void setId(Long id) {
        this.id = id;
    }


    // CACHING ----------------------------------------------------------------
    
    
	/**
	 * Gets cachePrefix
	 * @return The cachePrefix of this object
	 */
	public String getCachePrefix() {
		return CACHE_PREFIX;
	}
	
	
	/**
	 * Gets the object cache keys
	 * @return cacheKeys
	 */
	public String[] getCacheKeys() {
		if (getParameters() != null) {
			return getParameters().getCacheKeys();
		}
		return null;
	}
	

    // DATABASE MANAGER SPECIFIC ----------------------------------------------

    
    /**
     * Gets table name
     */
    public String getTableName() {
    	return "WALLET_RECORDS";
    }

    
    /**
     * Gets DB Connection name
     * @return project database connection name;
     */
    public String getDBConnectionName() {
    	return "Merits_Merits";
    }

    
    /**
     * Gets Insert query SQL
     * @return Insert SQL
     */
    public String getInsertSQL() {
    	// SQL
    	return "INSERT INTO WALLET_RECORDS (`ID_WALLET`, `WALLET_TYPE`, `TRANSACTION_DATE`, `OPERATION`, `TRANSACTION_VALUE`, `REF_WALLET`, `REF_WALLET_TYPE`, `REF_NAME`) values (?, ?, ?, ?, ?, ?, ?, ?)";
    }

    
    /**
     * Gets Insert procedure
     */
    public String getInsertProcedureName() {
    	return "WALLET_RECORDS_PROC(?, ?, ?, ?, ?, ?, ?, ?, ?)";
    }


	// RESULTSETS & STATEMENTS ------------------------------------------------
	    
    
    /**
     * Fills insert fields
     * @param statement
     */
    public void fillStatementFieldsForInsert(CallableStatement statement) throws Exception {
        // Set Wallet Records Wallet Identifier
        statement.setLong(1, idWallet);
        // Set Wallet Records Wallet Type
        statement.setInt(2, walletType.getValue());
        // Set Wallet Records Transaction Date
        statement.setTimestamp(3, transactionDate);
        // Set Wallet Records Operation
        statement.setInt(4, operation.getValue());
        // Set Wallet Records Transaction Value
        statement.setFloat(5, transactionValue);
        // Set Wallet Records Ref Wallet
        statement.setLong(6, refWallet);
        // Set Wallet Records Ref Wallet Type
        statement.setInt(7, refWalletType.getValue());
        // Check If Wallet Records Ref Name Is Null
        if (refName == null) {
            statement.setNull(8, java.sql.Types.VARCHAR);
        } else {
            // Set Wallet Records Ref Name
            statement.setString(8, StringUtilities.capString(refName,100));
        }
    }


    /**
     * Sets DAO values from a resultset 
     * @param resultset
     */
    public void fillValuesFromResultSet(ResultSet resultset) throws Exception {
        // Set Wallet Records Identifier
        this.setId(resultset.getLong("ID"));
        // Set Wallet Records Wallet Identifier
        this.setIdWallet(resultset.getLong("ID_WALLET"));
        // Set Wallet Records Wallet Type
        this.setWalletType(WalletType.getByValue(resultset.getInt("WALLET_TYPE")));
        // Set Wallet Records Transaction Date
        this.setTransactionDate(resultset.getTimestamp("TRANSACTION_DATE", SingleRecordDAO.TIMEZONE));
        // Set Wallet Records Operation
        this.setOperation(WalletOperation.getByValue(resultset.getInt("OPERATION")));
        // Set Wallet Records Transaction Value
        this.setTransactionValue(resultset.getFloat("TRANSACTION_VALUE"));
        // Set Wallet Records Ref Wallet
        this.setRefWallet(resultset.getLong("REF_WALLET"));
        // Set Wallet Records Ref Wallet Type
        this.setRefWalletType(WalletType.getByValue(resultset.getInt("REF_WALLET_TYPE")));
        // Set Wallet Records Ref Name
        this.setRefName(resultset.getString("REF_NAME"));
        // Check if was null
        if (resultset.wasNull()) {
            this.setRefName(null);
        }
    }

    
    // ------------------------------------------------------------------------
    // PARAMETERS CLASSES -----------------------------------------------------
    // ------------------------------------------------------------------------



	// Transaction Parameters Class -----------------------------------------------


	/**
	 * Transaction
	 */
	public class TransactionParameters extends DAOParameters {

		
		// Properties .........................................................

		
        // Wallet Records Identifier
        private long id;
        // Wallet Records Wallet Identifier
        private long idWallet;
        

		// Constructors .......................................................

		
		public TransactionParameters(long id, long idWallet) {
            this.id = id;
            this.idWallet = idWallet;
		}


        // DAO Parameters .....................................................


        /**
         * Gets the search fields
         * @return
         */
		public Object[] getSearchFields() {
			// Local Variables
			return new Object[] {id, idWallet};
		}
	
	
		/**
		 * Gets the object cache keys
		 * @return cacheKeys
		 */
		public String[] getCacheKeys() {
			return new String[] {"ID_WALLET=" + idWallet};
		}

		
	}

}
