package com.merits.modules.base.dao;

// IMPORTS ---------------------------------------------------------------------

import java.sql.ResultSet;
import java.sql.Timestamp;
import java.sql.Timestamp;


import com.weezzi.utils.DatabaseType;
import com.weezzi.core.dbmanager.dao.DAOParameters;
import com.weezzi.core.dbmanager.dao.SpecialQueryDAO;
import com.weezzi.core.dbmanager.dao.SingleRecordDAO;
import com.weezzi.core.data.*;
import com.weezzi.utils.extras.cache.WeezziCacheObjectType;




/**
 * <b>Title: </b>Wallet Record Data Transfer Object<br/>
 * <b>Description: </b>Wallet Record DTO Class<br/>
 * <b>Copyright: </b>Copyright (c) 2020 Overture Software<br/>
 * <b>Company: </b><A HREF="http://www.overturesoftware.com">Overture Software</A><br/>
 *
 * @author AUTO-GENERATED By Weezzi Builder
 * @version 1.0
 */
@SuppressWarnings("unused")
public class WalletRecordsMasterWalletSPQ extends SpecialQueryDAO {


	// CONSTANTS ---------------------------------------------------------------

	
	public static final String CACHE_PREFIX = "S1_2#";
	private static final long serialVersionUID = 1L;


    // PROPERTIES -------------------------------------------------------------


	// Special Query Fields	
    // Master Wallet Creates
    private Float creates;
    // Master Wallet Redeems
    private Float redeems;
    // Master Wallet Burns
    private Float burns;


    // CONSTRUCTORS -----------------------------------------------------------


	/**
	 * Empty Constructor
	 **/
	public WalletRecordsMasterWalletSPQ() {
        // Set cache object type
		this.setCacheObjectType(WeezziCacheObjectType.SpecialQuery);
	}
	
	// SPECIAL QUERY METHODS --------------------------------------------------


    /**
     * Wallet Record Bean Field Constructor
     * @param creates Float Wallet Records Creates
     * @param redeems Float Wallet Records Redeems
     * @param burns Float Wallet Records Burns
     */
    public WalletRecordsMasterWalletSPQ(Float creates, Float redeems, Float burns) {
        // Call default constructor
        this();
        // Set Wallet Records Creates
        setCreates(creates);
        // Set Wallet Records Redeems
        setRedeems(redeems);
        // Set Wallet Records Burns
        setBurns(burns);
    }


    // GETTERS -----------------------------------------------------------------


    /**
     * Get Wallet Records Creates
     * @return Float Wallet Records Creates
     */
    public Float getCreates() {
        return this.creates;
    }


    /**
     * Get Wallet Records Redeems
     * @return Float Wallet Records Redeems
     */
    public Float getRedeems() {
        return this.redeems;
    }


    /**
     * Get Wallet Records Burns
     * @return Float Wallet Records Burns
     */
    public Float getBurns() {
        return this.burns;
    }


    // SETTERS -----------------------------------------------------------------


    /**
     * Set Wallet Records Creates
     * @param creates Float Wallet Records Creates
     */
    public void setCreates(Float creates) {
        this.creates = creates;
    }


    /**
     * Set Wallet Records Redeems
     * @param redeems Float Wallet Records Redeems
     */
    public void setRedeems(Float redeems) {
        this.redeems = redeems;
    }


    /**
     * Set Wallet Records Burns
     * @param burns Float Wallet Records Burns
     */
    public void setBurns(Float burns) {
        this.burns = burns;
    }


   


    // CACHING ----------------------------------------------------------------
    
    
	/**
	 * Gets cachePrefix
	 * @return The cachePrefix of this object
	 */
	public String getCachePrefix() {
		return CACHE_PREFIX;
	}

    // DATABASE MANAGER SPECIFIC ----------------------------------------------

    
    /**
     * Gets DB Connection name
     * @return project database connection name;
     */
    public String getDBConnectionName() {
    	return "Merits_Merits";
    }


    public void fillValuesFromResultSet(ResultSet resultset) throws Exception {
        // Set Wallet Records Creates
        this.setCreates(getRSFloat(resultset, "CREATES"));
        // Set Wallet Records Redeems
        this.setRedeems(getRSFloat(resultset, "REDEEMS"));
        // Set Wallet Records Burns
        this.setBurns(getRSFloat(resultset, "BURNS"));
    }

	
	// SPECIAL QUERY PARAMETERS OBJECT CLASS ----------------------------------
	
	
	/**
	 * Wallet Record 
	 */
	public class Parameters extends DAOParameters {

		
		// Properties .........................................................

		
        // Master Wallet Identifier
        public long id;

		
		// Constructors .......................................................


    public Parameters(long id) {
            this.id = id;
    }



        // DAO Parameters .....................................................


        /**
         * Gets the search fields
         * @return
         */
		public Object[] getSearchFields() {
			// Local Variables
			return new Object[] {id};
		}
	
	
		/**
		 * Gets the object cache keys
		 * @return cacheKeys
		 */
		public String[] getCacheKeys() {
			return null;
		}
		
	}
}
