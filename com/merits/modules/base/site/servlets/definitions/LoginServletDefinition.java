package com.merits.modules.base.site.servlets.definitions;

//IMPORTS --------------------------------------------------------------------

import java.util.Vector;
import java.sql.Timestamp;
import com.weezzi.core.data.*;

import com.weezzi.utils.extras.console.Console;

import com.weezzi.core.data.FileParameter;
import com.weezzi.core.context.AjaxServletContext;
import com.weezzi.core.context.ServletContext;
import com.weezzi.core.servlets.base.WeezziServletAction;
import com.weezzi.core.servlets.base.WeezziSiteServlet;
import com.weezzi.core.servlets.exceptions.WeezziServletException;


/**
 * <b>Title: </b> LoginDefinition<br/>
 * <b>Description: </b> LoginDefinition<br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public abstract class LoginServletDefinition extends WeezziSiteServlet {

	
	// CONSTANTS --------------------------------------------------------------


    protected static final String VOLUNTEERLOGINACTION_PARAMETER_USERNAME = "Username";
    protected static final String VOLUNTEERLOGINACTION_PARAMETER_PASSWORD = "Password";
    protected static final String VOLUNTEERLOGINACTION_PARAMETER_REMEMBERME = "RememberMe";
    protected static final String SHOPLOGINACTION_PARAMETER_SHOPID = "ShopId";
    protected static final String SHOPLOGINACTION_PARAMETER_USERNAME = "Username";
    protected static final String SHOPLOGINACTION_PARAMETER_PASSWORD = "Password";
    protected static final String SHOPLOGINACTION_PARAMETER_REMEMBERME = "RememberMe";


	// ACTIONS -----------------------------------------------------------------

	
    /**
     * VolunteerLogin action
     */
    protected abstract void volunteerLogin(AjaxServletContext context, String username, String password, boolean rememberMe) throws Exception;


    /**
     * ShopLogin action
     */
    protected abstract void shopLogin(AjaxServletContext context, long shopId, String username, String password, boolean rememberMe) throws Exception;


	

	// SERVLET SPECIFIC -------------------------------------------------------

	
	/**
	 * Processes a servlet request
	 * @param context Servlet context
	 */
	public void processServletRequest(ServletContext context, WeezziServletAction servletAction) throws Throwable {
		// Local Variables
		LoginServletAjaxActions ajaxAction;
		LoginServletStandardActions standardAction;
		// Check if is AJAX or Standard action
		if (context.isAjaxRequest()) {
			// IS AJAX
			// Get action
			ajaxAction = (LoginServletAjaxActions) servletAction;
			// Process actions
			try {
				switch(ajaxAction) {
                    case VolunteerLogin:
                        volunteerLoginAjaxAction(new AjaxServletContext(context));
                        break;
                    case ShopLogin:
                        shopLoginAjaxAction(new AjaxServletContext(context));
                        break;
				}			
			} catch(Throwable e) {
				throw new WeezziServletException(e);
			}
		} else {
			// IS STANDARD
			// Get action
			standardAction = (LoginServletStandardActions) servletAction;
			// Process actions
			try {
				switch(standardAction) {
				}			
			} catch(Throwable e) {
				throw new WeezziServletException(e);
			}
		}
	}
	
	
	/**
	 * Processes a auto-complete request
	 * @param context Auto-complete context
	 */
	public AutoCompleteList processAutoCompleteRequest(ServletContext context, WeezziServletAction servletAction) throws Throwable {
		// Local Variables
		LoginServletAutoCompleteActions action;
		// Get action
		action = (LoginServletAutoCompleteActions) servletAction;
		// Process actions
		try {
			switch(action) {
			}			
		} catch(Throwable e) {
			throw new WeezziServletException(e);
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getStandardActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(LoginServletStandardActions action : LoginServletStandardActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getAjaxActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(LoginServletAjaxActions action : LoginServletAjaxActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getAutoCompleteActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(LoginServletAutoCompleteActions action : LoginServletAutoCompleteActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}

	
	// ACTION INTERNAL METHODS -----------------------------------------------------


    /**
     * VolunteerLogin action
     *@param context Servlet context
     */
    private void volunteerLoginAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        String username;
        String password;
        boolean rememberMe;
        // Get Username
        username = getParameterRequired(VOLUNTEERLOGINACTION_PARAMETER_USERNAME, context);
        // Get Password
        password = getParameterRequired(VOLUNTEERLOGINACTION_PARAMETER_PASSWORD, context);
        // Get RememberMe
        rememberMe = getParameterRequiredAsBoolean(VOLUNTEERLOGINACTION_PARAMETER_REMEMBERME, context);
        // Do action
        volunteerLogin(context, username, password, rememberMe);
    }


    /**
     * ShopLogin action
     *@param context Servlet context
     */
    private void shopLoginAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        long shopId;
        String username;
        String password;
        boolean rememberMe;
        // Get ShopId
        try {
            shopId = getParameterEncryptedAsLong(SHOPLOGINACTION_PARAMETER_SHOPID, context);
        } catch(Exception e) {
            Console.error("Missing or invalid encrypted long parameter \"ShopId\"");
            return;
        }
        // Get Username
        username = getParameterRequired(SHOPLOGINACTION_PARAMETER_USERNAME, context);
        // Get Password
        password = getParameterRequired(SHOPLOGINACTION_PARAMETER_PASSWORD, context);
        // Get RememberMe
        rememberMe = getParameterRequiredAsBoolean(SHOPLOGINACTION_PARAMETER_REMEMBERME, context);
        // Do action
        shopLogin(context, shopId, username, password, rememberMe);
    }




	// DEBUGGING METHODS -----------------------------------------------------------


    /**
     * Debug VolunteerLogin action parameters
     *@param context Servlet context
     */
    protected void debugVolunteerLoginAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"VolunteerLogin\" parameters:");
        Console.debug(1, VOLUNTEERLOGINACTION_PARAMETER_USERNAME + ": " + getParameter(VOLUNTEERLOGINACTION_PARAMETER_USERNAME, context));
        Console.debug(1, VOLUNTEERLOGINACTION_PARAMETER_PASSWORD + ": " + getParameter(VOLUNTEERLOGINACTION_PARAMETER_PASSWORD, context));
        Console.debug(1, VOLUNTEERLOGINACTION_PARAMETER_REMEMBERME + ": " + getParameter(VOLUNTEERLOGINACTION_PARAMETER_REMEMBERME, context));
    }


    /**
     * Debug ShopLogin action parameters
     *@param context Servlet context
     */
    protected void debugShopLoginAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"ShopLogin\" parameters:");
        Console.debug(1, SHOPLOGINACTION_PARAMETER_SHOPID + ": " + getParameter(SHOPLOGINACTION_PARAMETER_SHOPID, context));
        Console.debug(1, SHOPLOGINACTION_PARAMETER_USERNAME + ": " + getParameter(SHOPLOGINACTION_PARAMETER_USERNAME, context));
        Console.debug(1, SHOPLOGINACTION_PARAMETER_PASSWORD + ": " + getParameter(SHOPLOGINACTION_PARAMETER_PASSWORD, context));
        Console.debug(1, SHOPLOGINACTION_PARAMETER_REMEMBERME + ": " + getParameter(SHOPLOGINACTION_PARAMETER_REMEMBERME, context));
    }



}
