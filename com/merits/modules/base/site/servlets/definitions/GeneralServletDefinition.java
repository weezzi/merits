package com.merits.modules.base.site.servlets.definitions;

//IMPORTS --------------------------------------------------------------------

import java.util.Vector;
import java.sql.Timestamp;
import com.weezzi.core.data.*;

import com.weezzi.utils.extras.console.Console;

import com.weezzi.core.data.FileParameter;
import com.weezzi.core.context.AjaxServletContext;
import com.weezzi.core.context.ServletContext;
import com.weezzi.core.servlets.base.WeezziServletAction;
import com.weezzi.core.servlets.base.WeezziSiteServlet;
import com.weezzi.core.servlets.exceptions.WeezziServletException;


/**
 * <b>Title: </b> GeneralDefinition<br/>
 * <b>Description: </b> GeneralDefinition<br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public abstract class GeneralServletDefinition extends WeezziSiteServlet {

	
	// CONSTANTS --------------------------------------------------------------


    protected static final String CHANGELANGUAGEACTION_PARAMETER_LANGCODE = "LangCode";
    protected static final String SELECTSHOPACTION_PARAMETER_ID = "Id";
    protected static final String ADDCASHIERACTION_PARAMETER_ID = "Id";
    protected static final String ADDCASHIERACTION_PARAMETER_FIRSTNAME = "FirstName";
    protected static final String ADDCASHIERACTION_PARAMETER_LASTNAME = "LastName";
    protected static final String ADDCASHIERACTION_PARAMETER_PHONE = "Phone";
    protected static final String ADDCASHIERACTION_PARAMETER_USERNAME = "Username";
    protected static final String ADDCASHIERACTION_PARAMETER_PASSWORD = "Password";
    protected static final String VALIDATECODEACTION_PARAMETER_CODE = "Code";
    protected static final String REQUESTPAYMENTACTION_PARAMETER_CODE = "Code";
    protected static final String REQUESTPAYMENTACTION_PARAMETER_VALUE = "Value";
    protected static final String REQUESTPAYMENTACTION_PARAMETER_GOODTYPES = "GoodTypes";
    protected static final String VOLUNTEERACCEPTPAYMENTACTION_PARAMETER_CODE = "Code";
    protected static final String VOLUNTEERREFUSEPAYMENTACTION_PARAMETER_CODE = "Code";
    protected static final String CONTACTACTION_PARAMETER_NAME = "Name";
    protected static final String CONTACTACTION_PARAMETER_EMAIL = "Email";
    protected static final String CONTACTACTION_PARAMETER_PHONE = "Phone";
    protected static final String CONTACTACTION_PARAMETER_MESSAGE = "Message";


	// ACTIONS -----------------------------------------------------------------

	
    /**
     * ChangeLanguage action
     */
    protected abstract void changeLanguage(AjaxServletContext context, String langCode) throws Exception;


    /**
     * CancelPaymentCode action
     */
    protected abstract void cancelPaymentCode(AjaxServletContext context) throws Exception;


    /**
     * SelectShop action
     */
    protected abstract void selectShop(AjaxServletContext context, long id) throws Exception;


    /**
     * AddCashier action
     */
    protected abstract void addCashier(AjaxServletContext context, Long id, String firstName, String lastName, String phone, String username, String password) throws Exception;


    /**
     * ValidateCode action
     */
    protected abstract void validateCode(AjaxServletContext context, String code) throws Exception;


    /**
     * RequestPayment action
     */
    protected abstract void requestPayment(AjaxServletContext context, String code, float value, String goodTypes) throws Exception;


    /**
     * VolunteerAcceptPayment action
     */
    protected abstract void volunteerAcceptPayment(AjaxServletContext context, long code) throws Exception;


    /**
     * VolunteerRefusePayment action
     */
    protected abstract void volunteerRefusePayment(AjaxServletContext context, long code) throws Exception;


    /**
     * Contact action
     */
    protected abstract void contact(AjaxServletContext context, String name, String email, String phone, String message) throws Exception;


    /**
     * Logout action
     */
    protected abstract void logout(AjaxServletContext context) throws Exception;


	

	// SERVLET SPECIFIC -------------------------------------------------------

	
	/**
	 * Processes a servlet request
	 * @param context Servlet context
	 */
	public void processServletRequest(ServletContext context, WeezziServletAction servletAction) throws Throwable {
		// Local Variables
		GeneralServletAjaxActions ajaxAction;
		GeneralServletStandardActions standardAction;
		// Check if is AJAX or Standard action
		if (context.isAjaxRequest()) {
			// IS AJAX
			// Get action
			ajaxAction = (GeneralServletAjaxActions) servletAction;
			// Process actions
			try {
				switch(ajaxAction) {
                    case ChangeLanguage:
                        changeLanguageAjaxAction(new AjaxServletContext(context));
                        break;
                    case CancelPaymentCode:
                        cancelPaymentCodeAjaxAction(new AjaxServletContext(context));
                        break;
                    case SelectShop:
                        selectShopAjaxAction(new AjaxServletContext(context));
                        break;
                    case AddCashier:
                        addCashierAjaxAction(new AjaxServletContext(context));
                        break;
                    case ValidateCode:
                        validateCodeAjaxAction(new AjaxServletContext(context));
                        break;
                    case RequestPayment:
                        requestPaymentAjaxAction(new AjaxServletContext(context));
                        break;
                    case VolunteerAcceptPayment:
                        volunteerAcceptPaymentAjaxAction(new AjaxServletContext(context));
                        break;
                    case VolunteerRefusePayment:
                        volunteerRefusePaymentAjaxAction(new AjaxServletContext(context));
                        break;
                    case Contact:
                        contactAjaxAction(new AjaxServletContext(context));
                        break;
                    case Logout:
                        logoutAjaxAction(new AjaxServletContext(context));
                        break;
				}			
			} catch(Throwable e) {
				throw new WeezziServletException(e);
			}
		} else {
			// IS STANDARD
			// Get action
			standardAction = (GeneralServletStandardActions) servletAction;
			// Process actions
			try {
				switch(standardAction) {
				}			
			} catch(Throwable e) {
				throw new WeezziServletException(e);
			}
		}
	}
	
	
	/**
	 * Processes a auto-complete request
	 * @param context Auto-complete context
	 */
	public AutoCompleteList processAutoCompleteRequest(ServletContext context, WeezziServletAction servletAction) throws Throwable {
		// Local Variables
		GeneralServletAutoCompleteActions action;
		// Get action
		action = (GeneralServletAutoCompleteActions) servletAction;
		// Process actions
		try {
			switch(action) {
			}			
		} catch(Throwable e) {
			throw new WeezziServletException(e);
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getStandardActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(GeneralServletStandardActions action : GeneralServletStandardActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getAjaxActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(GeneralServletAjaxActions action : GeneralServletAjaxActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getAutoCompleteActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(GeneralServletAutoCompleteActions action : GeneralServletAutoCompleteActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}

	
	// ACTION INTERNAL METHODS -----------------------------------------------------


    /**
     * ChangeLanguage action
     *@param context Servlet context
     */
    private void changeLanguageAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        String langCode;
        // Get LangCode
        langCode = getParameterRequired(CHANGELANGUAGEACTION_PARAMETER_LANGCODE, context);
        // Do action
        changeLanguage(context, langCode);
    }


    /**
     * CancelPaymentCode action
     *@param context Servlet context
     */
    private void cancelPaymentCodeAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        // Do action
        cancelPaymentCode(context);
    }


    /**
     * SelectShop action
     *@param context Servlet context
     */
    private void selectShopAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        long id;
        // Get Id
        try {
            id = getParameterEncryptedAsLong(SELECTSHOPACTION_PARAMETER_ID, context);
        } catch(Exception e) {
            Console.error("Missing or invalid encrypted long parameter \"Id\"");
            return;
        }
        // Do action
        selectShop(context, id);
    }


    /**
     * AddCashier action
     *@param context Servlet context
     */
    private void addCashierAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        Long id;
        String firstName;
        String lastName;
        String phone;
        String username;
        String password;
        // Get Id
        try {
            id = getParameterEncryptedAsLong(ADDCASHIERACTION_PARAMETER_ID, context);
        } catch(Exception e) {
            Console.error("Missing or invalid encrypted long parameter \"Id\"");
            return;
        }
        // Get FirstName
        firstName = getParameterRequired(ADDCASHIERACTION_PARAMETER_FIRSTNAME, context);
        // Get LastName
        lastName = getParameterRequired(ADDCASHIERACTION_PARAMETER_LASTNAME, context);
        // Get Phone
        phone = getParameterRequired(ADDCASHIERACTION_PARAMETER_PHONE, context);
        // Get Username
        username = getParameterRequired(ADDCASHIERACTION_PARAMETER_USERNAME, context);
        // Get Password
        password = getParameter(ADDCASHIERACTION_PARAMETER_PASSWORD, context);
        // Do action
        addCashier(context, id, firstName, lastName, phone, username, password);
    }


    /**
     * ValidateCode action
     *@param context Servlet context
     */
    private void validateCodeAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        String code;
        // Get Code
        code = getParameterRequired(VALIDATECODEACTION_PARAMETER_CODE, context);
        // Do action
        validateCode(context, code);
    }


    /**
     * RequestPayment action
     *@param context Servlet context
     */
    private void requestPaymentAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        String code;
        float value;
        String goodTypes;
        // Get Code
        code = getParameterRequired(REQUESTPAYMENTACTION_PARAMETER_CODE, context);
        // Get Value
        value = getParameterRequiredAsFloat(REQUESTPAYMENTACTION_PARAMETER_VALUE, context);
        // Get GoodTypes
        goodTypes = getParameter(REQUESTPAYMENTACTION_PARAMETER_GOODTYPES, context);
        // Do action
        requestPayment(context, code, value, goodTypes);
    }


    /**
     * VolunteerAcceptPayment action
     *@param context Servlet context
     */
    private void volunteerAcceptPaymentAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        long code;
        // Get Code
        try {
            code = getParameterEncryptedAsLong(VOLUNTEERACCEPTPAYMENTACTION_PARAMETER_CODE, context);
        } catch(Exception e) {
            Console.error("Missing or invalid encrypted long parameter \"Code\"");
            return;
        }
        // Do action
        volunteerAcceptPayment(context, code);
    }


    /**
     * VolunteerRefusePayment action
     *@param context Servlet context
     */
    private void volunteerRefusePaymentAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        long code;
        // Get Code
        try {
            code = getParameterEncryptedAsLong(VOLUNTEERREFUSEPAYMENTACTION_PARAMETER_CODE, context);
        } catch(Exception e) {
            Console.error("Missing or invalid encrypted long parameter \"Code\"");
            return;
        }
        // Do action
        volunteerRefusePayment(context, code);
    }


    /**
     * Contact action
     *@param context Servlet context
     */
    private void contactAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        String name;
        String email;
        String phone;
        String message;
        // Get Name
        name = getParameterRequired(CONTACTACTION_PARAMETER_NAME, context);
        // Get Email
        email = getParameterRequired(CONTACTACTION_PARAMETER_EMAIL, context);
        // Get Phone
        phone = getParameterRequired(CONTACTACTION_PARAMETER_PHONE, context);
        // Get Message
        message = getParameterRequired(CONTACTACTION_PARAMETER_MESSAGE, context);
        // Do action
        contact(context, name, email, phone, message);
    }


    /**
     * Logout action
     *@param context Servlet context
     */
    private void logoutAjaxAction(AjaxServletContext context) throws Exception {
        // Local Variables
        // Do action
        logout(context);
    }




	// DEBUGGING METHODS -----------------------------------------------------------


    /**
     * Debug ChangeLanguage action parameters
     *@param context Servlet context
     */
    protected void debugChangeLanguageAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"ChangeLanguage\" parameters:");
        Console.debug(1, CHANGELANGUAGEACTION_PARAMETER_LANGCODE + ": " + getParameter(CHANGELANGUAGEACTION_PARAMETER_LANGCODE, context));
    }


    /**
     * Debug CancelPaymentCode action parameters
     *@param context Servlet context
     */
    protected void debugCancelPaymentCodeAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"CancelPaymentCode\" parameters:");
    }


    /**
     * Debug SelectShop action parameters
     *@param context Servlet context
     */
    protected void debugSelectShopAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"SelectShop\" parameters:");
        Console.debug(1, SELECTSHOPACTION_PARAMETER_ID + ": " + getParameter(SELECTSHOPACTION_PARAMETER_ID, context));
    }


    /**
     * Debug AddCashier action parameters
     *@param context Servlet context
     */
    protected void debugAddCashierAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"AddCashier\" parameters:");
        Console.debug(1, ADDCASHIERACTION_PARAMETER_ID + ": " + getParameter(ADDCASHIERACTION_PARAMETER_ID, context));
        Console.debug(1, ADDCASHIERACTION_PARAMETER_FIRSTNAME + ": " + getParameter(ADDCASHIERACTION_PARAMETER_FIRSTNAME, context));
        Console.debug(1, ADDCASHIERACTION_PARAMETER_LASTNAME + ": " + getParameter(ADDCASHIERACTION_PARAMETER_LASTNAME, context));
        Console.debug(1, ADDCASHIERACTION_PARAMETER_PHONE + ": " + getParameter(ADDCASHIERACTION_PARAMETER_PHONE, context));
        Console.debug(1, ADDCASHIERACTION_PARAMETER_USERNAME + ": " + getParameter(ADDCASHIERACTION_PARAMETER_USERNAME, context));
        Console.debug(1, ADDCASHIERACTION_PARAMETER_PASSWORD + ": " + getParameter(ADDCASHIERACTION_PARAMETER_PASSWORD, context));
    }


    /**
     * Debug ValidateCode action parameters
     *@param context Servlet context
     */
    protected void debugValidateCodeAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"ValidateCode\" parameters:");
        Console.debug(1, VALIDATECODEACTION_PARAMETER_CODE + ": " + getParameter(VALIDATECODEACTION_PARAMETER_CODE, context));
    }


    /**
     * Debug RequestPayment action parameters
     *@param context Servlet context
     */
    protected void debugRequestPaymentAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"RequestPayment\" parameters:");
        Console.debug(1, REQUESTPAYMENTACTION_PARAMETER_CODE + ": " + getParameter(REQUESTPAYMENTACTION_PARAMETER_CODE, context));
        Console.debug(1, REQUESTPAYMENTACTION_PARAMETER_VALUE + ": " + getParameter(REQUESTPAYMENTACTION_PARAMETER_VALUE, context));
        Console.debug(1, REQUESTPAYMENTACTION_PARAMETER_GOODTYPES + ": " + getParameter(REQUESTPAYMENTACTION_PARAMETER_GOODTYPES, context));
    }


    /**
     * Debug VolunteerAcceptPayment action parameters
     *@param context Servlet context
     */
    protected void debugVolunteerAcceptPaymentAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"VolunteerAcceptPayment\" parameters:");
        Console.debug(1, VOLUNTEERACCEPTPAYMENTACTION_PARAMETER_CODE + ": " + getParameter(VOLUNTEERACCEPTPAYMENTACTION_PARAMETER_CODE, context));
    }


    /**
     * Debug VolunteerRefusePayment action parameters
     *@param context Servlet context
     */
    protected void debugVolunteerRefusePaymentAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"VolunteerRefusePayment\" parameters:");
        Console.debug(1, VOLUNTEERREFUSEPAYMENTACTION_PARAMETER_CODE + ": " + getParameter(VOLUNTEERREFUSEPAYMENTACTION_PARAMETER_CODE, context));
    }


    /**
     * Debug Contact action parameters
     *@param context Servlet context
     */
    protected void debugContactAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"Contact\" parameters:");
        Console.debug(1, CONTACTACTION_PARAMETER_NAME + ": " + getParameter(CONTACTACTION_PARAMETER_NAME, context));
        Console.debug(1, CONTACTACTION_PARAMETER_EMAIL + ": " + getParameter(CONTACTACTION_PARAMETER_EMAIL, context));
        Console.debug(1, CONTACTACTION_PARAMETER_PHONE + ": " + getParameter(CONTACTACTION_PARAMETER_PHONE, context));
        Console.debug(1, CONTACTACTION_PARAMETER_MESSAGE + ": " + getParameter(CONTACTACTION_PARAMETER_MESSAGE, context));
    }


    /**
     * Debug Logout action parameters
     *@param context Servlet context
     */
    protected void debugLogoutAjaxAction(AjaxServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"Logout\" parameters:");
    }



}
