package com.merits.modules.base.site.components;

//IMPORTS -------------------------------------------------------------------------

import com.merits.core.MeritsUtils;
import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.VolunteersDAO;
import com.merits.modules.base.site.components.definitions.VolunteersLoginDefinition;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;


/**
 * <b>Title: </b> VolunteersLogin<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class VolunteersLogin extends VolunteersLoginDefinition {


	// CONSTANTS ---------------------------------------------------------------

	
	// INITIALIZATION ----------------------------------------------------------
	
	
	public void customComponentInitialization() {
		addGlobalStyle("MeritsApp");
		addScript("Scripts");
	};


	// BROWSER OUTPUT ----------------------------------------------------------


	/**
	 * Generate Start Output
	 * @return String
	 */
	public String getStartOutput() {
		// Local Variables
		Long volId = null;
		String cookie;
		Expression expr;
		AttributeMapper map;
		VolunteersDAO volunteer;
		// Check cookie
		if (getContext().getCookie(MeritsUtils.REMEMBER_COOKIE) != null) {
			try {
				cookie = getContext().getEncryptedCookie(MeritsUtils.REMEMBER_COOKIE);
				if (cookie.startsWith("V_")) {
					// SHOP
					volId = Long.parseLong(cookie.substring(2));
					// Get volunteer
					volunteer = BaseContainer.getVolunteer(volId);
					if (volunteer != null) {
						MeritsUtils.loginVolunteer(getSession(), volunteer);
						sendRedirect(getPageLink("Volunteers_Home"));
						return "";
					}
				}
			} catch (Exception e) {
				// Catch Exception
				Console.error("Error login in",e);
			}
		}
		// Get Expression
		expr = getHTMLExpression("Default");
		map = expr.getAttributeMapper();
		// Add attributes
		map.addAttribute("", "");
		// Render
		return expr.render(map);
	}

	
	// PRIVATE ----------------------------------------------------------------


}

