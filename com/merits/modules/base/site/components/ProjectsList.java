package com.merits.modules.base.site.components;

//IMPORTS -------------------------------------------------------------------------

import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.BulkProjectsDAO;
import com.merits.modules.base.dao.ProjectsDAO;
import com.merits.modules.base.site.components.definitions.ProjectsListDefinition;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;

/**
 * <b>Title: </b> ProjectsList<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class ProjectsList extends ProjectsListDefinition {

    // CONSTANTS ---------------------------------------------------------------

    // INITIALIZATION ----------------------------------------------------------

    public void customComponentInitialization() {
        addGlobalStyle("MeritsV2");
    }

    ;

    // BROWSER OUTPUT ----------------------------------------------------------

    /**
     * Generate Start Output
     *
     * @return String
     */
    public String getStartOutput() {
        // Local Variables
        Expression expr;
        AttributeMapper map;
        // Get Expression
        expr = getHTMLExpression("Default");
        map = expr.getAttributeMapper();
        // Add attributes
        map.addAttribute("PROJECT_LIST", renderProjects());
        // Render
        return expr.render(map);
    }

    /**
     * @return
     */
    private String renderProjects() {
        // Local Variables
        BulkProjectsDAO projects;
        Expression expr = getHTMLExpression("Project");
        AttributeMapper map = new AttributeMapper();
        StringBuilder buffer = new StringBuilder();
        try {
            projects = BaseContainer.getProjectsBlockFindByAll(getSiteLanguage(), 0, componentData.getInteger("NumberOfProjects"));
            for (ProjectsDAO project : projects.data) {
                map.addAttribute("LOGO", getImage(project.getPhoto(), 200, 200));
                map.addAttribute("NAME", project.getName());
                map.addAttribute("DESCRIPTION", project.getDescription());
                // TODO pending definition of the URL
                map.addAttribute("LINK", "/projects/Id="+project.getId());
                map.addAttribute("VOLUNTEER", "");
                map.addAttribute("DONATE", "");
                buffer.append(expr.render(map));
            }
        } catch (Exception e) {
            // Catch Exception
            Console.error("Error getting projects", e);
        }
        return buffer.toString();
    }

    // PRIVATE ----------------------------------------------------------------

}

