package com.merits.modules.base.site.components;

import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.BulkShopsDAO;
import com.merits.modules.base.dao.ShopsDAO;

//IMPORTS -------------------------------------------------------------------------

import com.merits.modules.base.site.components.definitions.ShopListDefinition;
import com.weezzi.utils.StringUtilities;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;


/**
 * <b>Title: </b> ShopList<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class ShopList extends ShopListDefinition {


	// CONSTANTS ---------------------------------------------------------------

	
	// INITIALIZATION ----------------------------------------------------------
	
	
	public void customComponentInitialization() {
		addGlobalStyle("MeritsV2");
	};


	// BROWSER OUTPUT ----------------------------------------------------------


	/**
	 * Generate Start Output
	 * @return String
	 */
	public String getStartOutput() {
		// Local Variables
		Expression expr;
		AttributeMapper map;
		// Get Expression
		expr = getHTMLExpression("Default");
		map = expr.getAttributeMapper();
		// Add attributes
		map.addAttribute("SHOPS", renderShops());
		// Render
		return expr.render(map);
	}


	/**
	 * @return
	 */
	private String renderShops() {
		// Local Variables
		BulkShopsDAO shops;
		Expression expr = getHTMLExpression("Shop");
		AttributeMapper map = new AttributeMapper();
		StringBuilder buffer = new StringBuilder();
		try {
			shops = BaseContainer.getShopsFindByGetAll();
			for(ShopsDAO shop : shops.data) {
				map.addAttribute("LOGO", getImage(shop.getPhoto(), 200, 200));
				map.addAttribute("NAME", shop.getName());
				map.addAttribute("URL", shop.getShopUrl());
				map.addAttribute("PHONE", shop.getShopPhone());
				map.addAttribute("EMAIL", shop.getShopEmail());
				map.addAttribute("ADDRESS", StringUtilities.replaceCRbyBR(shop.getAddress()));
				map.addAttribute("NOTES", StringUtilities.replaceCRbyBR(shop.getNotes()));
				buffer.append(expr.render(map));
			}
		} catch (Exception e) {
			// Catch Exception
			Console.error("Error getting shops", e);
		}
		return buffer.toString();
	}

	
	// PRIVATE ----------------------------------------------------------------


}

