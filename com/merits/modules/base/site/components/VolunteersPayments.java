package com.merits.modules.base.site.components;

import com.merits.core.MeritsUtils;
import com.merits.core.WalletTransactionInfo;
import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.BulkWalletRecordsDAO;
import com.merits.modules.base.dao.WalletRecordsDAO;

//IMPORTS -------------------------------------------------------------------------

import com.merits.modules.base.site.components.definitions.VolunteersPaymentsDefinition;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;


/**
 * <b>Title: </b> VolunteersPayments<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class VolunteersPayments extends VolunteersPaymentsDefinition {


	// CONSTANTS ---------------------------------------------------------------

	
	// INITIALIZATION ----------------------------------------------------------
	
	
	public void customComponentInitialization() {
	};


	// BROWSER OUTPUT ----------------------------------------------------------


	/**
	 * Generate Start Output
	 * @return String
	 */
	public String getStartOutput() {
		// Local Variables
		Expression expr;
		AttributeMapper map;
		// Get Expression
		expr = getHTMLExpression("Default");
		map = expr.getAttributeMapper();
		// Add attributes
		map.addAttribute("PAYMENTS", renderPayments());
		// Render
		return expr.render(map);
	}

	
	// PRIVATE ----------------------------------------------------------------


	/**
	 * @return
	 */
	private String renderPayments() {
		// Local Variables
		Expression expr;
		AttributeMapper map;
		BulkWalletRecordsDAO records;
		WalletTransactionInfo info;
		StringBuilder buffer = new StringBuilder();
		// Get Expression
		expr = getHTMLExpression("Payment");
		map = expr.getAttributeMapper();
		try {
			records = BaseContainer.getWalletRecordsFindByTransactions(MeritsUtils.getWalletId(getContext()));
		} catch (Exception e) {
			// Catch Exception
			Console.error("Error getting volunteer wallet \"" + MeritsUtils.getWalletId(getContext()) + "\" records", e);;
			return "";
		}
		// Render records
		for(WalletRecordsDAO rec : records.data) {
			info = MeritsUtils.getReferenceTransactionInfo(getContext(), rec, getSiteLanguage());
			map.addAttribute("ID", encryptData(rec.getId()));
			map.addAttribute("DATE", info.getDate());
			map.addAttribute("NAME", info.getName());
			map.addAttribute("PHOTO", info.getPhoto());
			map.addAttribute("VALUE_DEC", info.getValueDecimal());
			map.addAttribute("VALUE_INT", info.getValueInteger());
			buffer.append(expr.render(map));
		}
		// Render
		return buffer.toString();
	}

}

