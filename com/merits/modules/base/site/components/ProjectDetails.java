package com.merits.modules.base.site.components;

//IMPORTS -------------------------------------------------------------------------

import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.ProjectsDAO;
import com.merits.modules.base.site.components.definitions.ProjectDetailsDefinition;
import com.merits.modules.base.site.components.shared.ProjectDetailsData;
import com.weezzi.core.data.Image;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;

/**
 * <b>Title: </b> ProjectDetails<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class ProjectDetails extends ProjectDetailsDefinition {

    // CONSTANTS ---------------------------------------------------------------

    // INITIALIZATION ----------------------------------------------------------

    public void customComponentInitialization() {
        addGlobalStyle("MeritsV2");
    }

    ;

    // BROWSER OUTPUT ----------------------------------------------------------

    /**
     * Generate Start Output
     *
     * @return String
     */
    public String getStartOutput() {
        // Local Variables
        Expression expr;
        AttributeMapper map;
        ProjectsDAO daoProject;
        float pctVolunteers = 0.0f;
        float pctDonations = 0.0f;
        float volunteersProgressBar = 0.0f;
        float donationsProgressBar = 0.0f;
        // Get Expression
        expr = getHTMLExpression("Default");
        map = expr.getAttributeMapper();
        // Add attributes
        try {
            daoProject = BaseContainer.getProject(componentData.getLong(ProjectDetailsData.PROJECTID), getSiteLanguage());
            map.addAttribute("NAME", daoProject.getName());
            map.addAttribute("HEADLINE", daoProject.getHeadline());
            map.addAttribute("DESCRIPTION", daoProject.getDescription());
            if (daoProject.getHasVolunteers()) {
                map.addAttribute("ACT_VOLUNTEERS", daoProject.getVolunteersActual());
                map.addAttribute("WANT_VOLUNTEERS", daoProject.getVolunteersWanted());
                pctVolunteers = daoProject.getVolunteersActual() / daoProject.getVolunteersWanted();
                map.addAttribute("PCT_VOLUNTEERS", String.format("%.2f", pctVolunteers));
                volunteersProgressBar = 500 * pctVolunteers;
                map.addAttribute("VOL_PG_BAR", String.format("%.2f", volunteersProgressBar));
            }
            if (daoProject.getHasDonations()) {
                map.addAttribute("ACT_DONATIONS", daoProject.getDonationsActual());
                map.addAttribute("WANT_DONATIONS", daoProject.getDonationsWanted());
                pctDonations = daoProject.getDonationsActual() / daoProject.getDonationsWanted();
                map.addAttribute("PCT_DONATIONS", String.format("%.2f", pctDonations));
                donationsProgressBar = 500 * pctDonations;
                map.addAttribute("DON_PG_BAR", String.format("%.2f", donationsProgressBar));
            }
            map.addAttribute("GALLERY_IMAGES", renderImages(daoProject));
        } catch (Exception e) {
            Console.error("Error getting project details", e);
        }
        // Render
        return expr.render(map);
    }

    // PRIVATE ----------------------------------------------------------------
    private String renderImages(final ProjectsDAO daoProject) {
        // Local Variables
        Expression expr = getHTMLExpression("GalleryImage");
        AttributeMapper map = new AttributeMapper();
        StringBuilder buffer = new StringBuilder();
        for (Image projImage : daoProject.getImagesList().getList()) {
            map.addAttribute("IMAGE", getImage(daoProject.getPhoto(), 200, 200));
            buffer.append(expr.render(map));
        }
        return buffer.toString();
    }

}

