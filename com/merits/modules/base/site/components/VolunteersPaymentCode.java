package com.merits.modules.base.site.components;

import java.sql.Timestamp;
import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.PaymentsCodeDAO;

//IMPORTS -------------------------------------------------------------------------

import com.merits.modules.base.site.components.definitions.VolunteersPaymentCodeDefinition;
import com.merits.modules.base.uobjects.enums.PaymentCodeStatus;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;


/**
 * <b>Title: </b> VolunteersPaymentCode<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class VolunteersPaymentCode extends VolunteersPaymentCodeDefinition {


	// CONSTANTS ---------------------------------------------------------------


	private static final String CODE_VALID_CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	
	// INITIALIZATION ----------------------------------------------------------
	
	
	private static final long CODE_VALID_TIME_IN_SECONDS = 60*5; // 5 minutes


	public void customComponentInitialization() {
		addInstantScript(getScript("Scripts"));
	};


	// BROWSER OUTPUT ----------------------------------------------------------


	/**
	 * Generate Start Output
	 * @return String
	 */
	public String getStartOutput() {
		// Local Variables
		String code;
		Expression expr;
		AttributeMapper map;
		PaymentsCodeDAO codeDAO;
		// Get Expression
		expr = getHTMLExpression("Default");
		map = expr.getAttributeMapper();
		try {
			// Get latest payment code 
			codeDAO = BaseContainer.getPaymentsCodeFindByGetLatest(getSiteUserId());
			if (codeDAO != null) {
				BaseContainer.updatePaymentsCodeByStatus(codeDAO.getId(), PaymentCodeStatus.Canceled, null);
			}
		} catch (Exception e) {
			// Catch Exception
			Console.error("Error getting volunteer code", e);
			sendRedirect(getPageLink("Volunteer_Home"));
			return "";
		}
		try {
			code = generateCode();
		} catch (Exception e) {
			// Catch Exception
			Console.error("Error generating volunteer code", e);
			sendRedirect(getPageLink("Volunteer_Home"));
			return "";
		}
		// Add attributes
		map.addAttribute("NAME", getSiteUserDisplayName());
		map.addAttribute("CODE", code);
		if (getSiteUserPhotoId() != null) {
			map.addAttribute("PHOTO", getImage(getSiteUserPhotoId(), 400, 400));
		}
		// Render
		return expr.render(map);
	}

	
	// PRIVATE ----------------------------------------------------------------


	/**
	 * @return
	 * @throws Exception 
	 */
	private String generateCode() throws Exception {
		// Local Variables
		String code;
		code = generateNewCode();
		// Check if exists
		while (BaseContainer.getPaymentsCodeFindByGetPaymentCode(code) != null) {
			code = generateNewCode();
		}
		BaseContainer.createPaymentsCode(
				getSiteUserId(), 
				new Timestamp(System.currentTimeMillis()), 
				new Timestamp(System.currentTimeMillis() + CODE_VALID_TIME_IN_SECONDS*1000), 
				PaymentCodeStatus.Valid, 
				code);
		return code;
	}


	/**
	 * @return
	 */
	private String generateNewCode() {
		// Local Variables
		StringBuilder buffer = new StringBuilder();
		for(int i=0;i<3;i++) {
			if (i != 0) {
				buffer.append("-");
			}
			for(int z=0;z<2;z++) {
				buffer.append(CODE_VALID_CHARS.charAt((int) (Math.random()*CODE_VALID_CHARS.length())));
			}
		}
		return buffer.toString();
	}


}

  