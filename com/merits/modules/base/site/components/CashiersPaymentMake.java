package com.merits.modules.base.site.components;

import com.merits.core.MeritsUtils;
import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.BulkShopGoodtypesShopGoodSPQ;
import com.merits.modules.base.dao.ShopGoodtypesShopGoodSPQ;

//IMPORTS -------------------------------------------------------------------------

import com.merits.modules.base.site.components.definitions.CashiersPaymentMakeDefinition;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;


/**
 * <b>Title: </b> CashiersPaymentMake<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class CashiersPaymentMake extends CashiersPaymentMakeDefinition {


	// CONSTANTS ---------------------------------------------------------------

	
	// INITIALIZATION ----------------------------------------------------------
	
	
	public void customComponentInitialization() {
		addGlobalScript("AppScripts");
	};


	// BROWSER OUTPUT ----------------------------------------------------------


	/**
	 * Generate Start Output
	 * @return String
	 */
	public String getStartOutput() {
		// Local Variables
		Expression expr;
		AttributeMapper map;
		// Get Expression
		expr = getHTMLExpression("Default");
		map = expr.getAttributeMapper();
		// Add attributes
		map.addAttribute("GOOD_TYPES", renderGoodTypes(map));
		// Render
		return expr.render(map);
	}


	/**
	 * @param mainMap 
	 * @return
	 */
	private String renderGoodTypes(AttributeMapper mainMap) {
		// Local Variables
		int count = 1;
		Expression expr;
		AttributeMapper map;
		BulkShopGoodtypesShopGoodSPQ gt;
		StringBuilder buffer = new StringBuilder();
		// Get Expression
		expr = getHTMLExpression("GoodType");
		map = expr.getAttributeMapper();
		// Get food types
		try {
			gt = BaseContainer.getShopGoodtypesFindByShopGoodSPQ(MeritsUtils.getShopId(getContext()), getSiteLanguage());
			for(ShopGoodtypesShopGoodSPQ data : gt.data) {
				map.addAttribute("ID", encryptData(data.getId()));
				map.addAttribute("IDX", count);
				map.addAttribute("LABEL", data.getName());
				count ++;
				buffer.append(expr.render(map));
			}
			mainMap.addAttribute("COUNT", count-1);
		} catch (Exception e) {
			// Catch Exception
			Console.error("Error getting shop good types", e);
		}
		if (buffer.length() == 0) {
			return null;
		}
		return buffer.toString();
	}

	
	// PRIVATE ----------------------------------------------------------------


}

