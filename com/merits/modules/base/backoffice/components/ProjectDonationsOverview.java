package com.merits.modules.base.backoffice.components;

//IMPORTS -------------------------------------------------------------------------

import java.util.HashMap;

import com.merits.core.MeritsUtils;
import com.merits.modules.base.backoffice.components.definitions.ProjectDonationsOverviewDefinition;
import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.ProjectsDAO;
import com.merits.modules.base.dao.WalletRecordsMasterWalletSPQ;
import com.merits.modules.base.uobjects.enums.WalletType;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.webserver.simel.AttributeMapper;
import com.weezzi.webserver.simel.Expression;


/**
 * <b>Title: </b> ProjectDonationsOverview<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public class ProjectDonationsOverview extends ProjectDonationsOverviewDefinition {


	// CONSTANTS ---------------------------------------------------------------

	
	// INITIALIZATION ----------------------------------------------------------
	
	
	public void customComponentInitialization() {
		addStyle("Styles");
	};


	// BROWSER OUTPUT ----------------------------------------------------------


	/**
	 * Generate Start Output
	 * @return String
	 */
	public String getStartOutput() {
		// Local Variables
		float value;
		float pct=0.0f;
		float totalValue = 0;
		Expression expr;
		AttributeMapper map;
		ProjectsDAO daoProject;
		WalletRecordsMasterWalletSPQ master = null;
		HashMap<WalletType, Float> values = new HashMap<WalletType, Float>();
		// Get Expression
		expr = getHTMLExpression("Default");
		map = expr.getAttributeMapper();
		// Fill defaults
		for(WalletType type : WalletType.values()) {
			values.put(type, 0f);
		}
		// Get totals
		try {
			daoProject = BaseContainer.getProject(componentData.getLong("Id"),getBackofficeLanguage());
			if (daoProject.getHasDonations()) {
				pct = daoProject.getDonationsActual() / daoProject.getDonationsWanted();
			}
			if (pct > 0) {
				map.addAttribute("BAR_SIZE" , (int) ((pct)*400));
			} else {
				map.addAttribute("BAR_SIZE", 0);
			}
			map.addAttribute("BAR_PCT" , (int) (pct*100));
		} catch (Exception e) {
			Console.error(e.getMessage(),e);
		}
		// Add attributes
		// Render
		return expr.render(map);
	}

	
	// PRIVATE ----------------------------------------------------------------


}

