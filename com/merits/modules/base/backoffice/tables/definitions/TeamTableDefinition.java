package com.merits.modules.base.backoffice.tables.definitions;

//IMPORTS -------------------------------------------------------------------------

import java.util.Vector;

import com.weezzi.core.components.WeezziBackofficeComponentType;
import com.weezzi.core.components.data.*;
import com.weezzi.core.data.*;
import com.weezzi.core.tables.TableStatus;
import com.weezzi.core.tables.TableColumnOrdering;
import com.weezzi.core.tables.WeezziTable;
import com.weezzi.system.modules.wcontacts.uobjects.enums.ContactGender;
import com.weezzi.core.components.dynamicproperties.ComponentPropertyType;
import com.weezzi.core.components.dynamicproperties.DynamicComponentProperties;
import com.weezzi.core.components.exceptions.PropertyNotFoundException;
import com.weezzi.core.components.types.WeezziBackofficeTableComponent;
import com.weezzi.core.components.WeezziBackofficeComponentType;
import com.weezzi.core.components.WeezziBackOfficeComponent;
import com.weezzi.core.context.TableContext;
import com.weezzi.utils.extras.console.Console;
import java.util.Collection;


/**
 * <b>Title: </b> TeamTable<br/>
 * <b>Description: </b> <br/>
 *
 * @author Auto-generated by Weezzi Builder
 * @version 1.0
 */
@SuppressWarnings("unused")
public abstract class TeamTableDefinition extends WeezziTable {

	
	// CONSTRUCTORS -----------------------------------------------------------

	
	public TeamTableDefinition() {
		// Initialization
		super();
		this.setName("Team");
	}
	

	// PUBLIC -----------------------------------------------------------------


    /**
     * Add row method
     * @param id long parameter
     * @param publishInfo PublishInfo parameter
     * @param name Name contact parameter
     * @param position Position string parameter
     * @param social Social string parameter
     * @param translations Translations multilanguage key parameter
     * @param info Info edit info parameter
     */
    protected void addNonClickableRow(Long id, PublishInfo publishInfo, Contact name, String position, String social, String translations, EditInfo info) {
        // Sets row as clickable
        setClickableRow(false);
        // Sets the row id
        setRowId(encryptData(id));
        // Sets the publish info data
        setRowPublishInfo(publishInfo);
        // Adds a row start
        addRowStart();
        // Name Column
        addContactColumnData(name);
        // Position Column
        addTextColumnData(position);
        // Social Column
        addTextColumnData(social);
        // Translations Column
        addMultilanguageColumnData(translations);
        // Info Column
        addEditInfoColumnData(info, TimeFormat.DateAndTime);
        // Adds the row end
        addRowEnd();
    }


    /**
     * Add row method
     * @param id long parameter
     * @param publishInfo PublishInfo parameter
     * @param name Name contact parameter
     * @param position Position string parameter
     * @param social Social string parameter
     * @param translations Translations multilanguage key parameter
     * @param info Info edit info parameter
     */
    protected void addRow(Long id, PublishInfo publishInfo, Contact name, String position, String social, String translations, EditInfo info) {
        // Sets row as clickable
        setClickableRow(true);
        // Sets the row id
        setRowId(encryptData(id));
        // Sets the publish info data
        setRowPublishInfo(publishInfo);
        // Adds a row start
        addRowStart();
        // Name Column
        addContactColumnData(name);
        // Position Column
        addTextColumnData(position);
        // Social Column
        addTextColumnData(social);
        // Translations Column
        addMultilanguageColumnData(translations);
        // Info Column
        addEditInfoColumnData(info, TimeFormat.DateAndTime);
        // Adds the row end
        addRowEnd();
    }


    /**
     * Add row method
     * @param id long parameter
     * @param clickId long parameter
     * @param publishInfo PublishInfo parameter
     * @param name Name contact parameter
     * @param position Position string parameter
     * @param social Social string parameter
     * @param translations Translations multilanguage key parameter
     * @param info Info edit info parameter
     */
    protected void addRow(Long id, Long clickId, PublishInfo publishInfo, Contact name, String position, String social, String translations, EditInfo info) {
        // Sets row as clickable
        setClickableRow(true);
        // Sets the row id
        setRowId(encryptData(id));
        setClickId("" + clickId);
        // Sets the publish info data
        setRowPublishInfo(publishInfo);
        // Adds a row start
        addRowStart();
        // Name Column
        addContactColumnData(name);
        // Position Column
        addTextColumnData(position);
        // Social Column
        addTextColumnData(social);
        // Translations Column
        addMultilanguageColumnData(translations);
        // Info Column
        addEditInfoColumnData(info, TimeFormat.DateAndTime);
        // Adds the row end
        addRowEnd();
    }


    /**
     * Add row method
     * @param id long parameter
     * @param publishInfo PublishInfo parameter
     * @param nameName Name contact name parameter
     * @param namePhoto Name contact photo parameter
     * @param position Position string parameter
     * @param social Social string parameter
     * @param translations Translations multilanguage key parameter
     * @param info Info edit info parameter
     */
    protected void addNonClickableRow(Long id, PublishInfo publishInfo, String nameName, Image namePhoto, String position, String social, String translations, EditInfo info) {
        // Sets row as clickable
        setClickableRow(false);
        // Sets the row id
        setRowId(encryptData(id));
        // Sets the publish info data
        setRowPublishInfo(publishInfo);
        // Adds a row start
        addRowStart();
        // Name Column
        addContactColumnData(nameName, namePhoto);
        // Position Column
        addTextColumnData(position);
        // Social Column
        addTextColumnData(social);
        // Translations Column
        addMultilanguageColumnData(translations);
        // Info Column
        addEditInfoColumnData(info, TimeFormat.DateAndTime);
        // Adds the row end
        addRowEnd();
    }


    /**
     * Add row method
     * @param id long parameter
     * @param publishInfo PublishInfo parameter
     * @param nameName Name contact name parameter
     * @param namePhoto Name contact photo parameter
     * @param position Position string parameter
     * @param social Social string parameter
     * @param translations Translations multilanguage key parameter
     * @param info Info edit info parameter
     */
    protected void addRow(Long id, PublishInfo publishInfo, String nameName, Image namePhoto, String position, String social, String translations, EditInfo info) {
        // Sets row as clickable
        setClickableRow(true);
        // Sets the row id
        setRowId(encryptData(id));
        // Sets the publish info data
        setRowPublishInfo(publishInfo);
        // Adds a row start
        addRowStart();
        // Name Column
        addContactColumnData(nameName, namePhoto);
        // Position Column
        addTextColumnData(position);
        // Social Column
        addTextColumnData(social);
        // Translations Column
        addMultilanguageColumnData(translations);
        // Info Column
        addEditInfoColumnData(info, TimeFormat.DateAndTime);
        // Adds the row end
        addRowEnd();
    }


    /**
     * Add row method
     * @param id long parameter
     * @param clickId long parameter
     * @param publishInfo PublishInfo parameter
     * @param nameName Name contact name parameter
     * @param namePhoto Name contact photo parameter
     * @param position Position string parameter
     * @param social Social string parameter
     * @param translations Translations multilanguage key parameter
     * @param info Info edit info parameter
     */
    protected void addRow(Long id, Long clickId, PublishInfo publishInfo, String nameName, Image namePhoto, String position, String social, String translations, EditInfo info) {
        // Sets row as clickable
        setClickableRow(true);
        // Sets the row id
        setRowId(encryptData(id));
        setClickId("" + clickId);
        // Sets the publish info data
        setRowPublishInfo(publishInfo);
        // Adds a row start
        addRowStart();
        // Name Column
        addContactColumnData(nameName, namePhoto);
        // Position Column
        addTextColumnData(position);
        // Social Column
        addTextColumnData(social);
        // Translations Column
        addMultilanguageColumnData(translations);
        // Info Column
        addEditInfoColumnData(info, TimeFormat.DateAndTime);
        // Adds the row end
        addRowEnd();
    }


		

	// GET DATA METHOD --------------------------------------------------------

	
	/**
	 * Gets data action
	 * @param context Context
	 * @param startIndex Start Index 
	 * @param endIndex End Index 
	 * @param search Search 
	 * @param categoryId Category Id 
	 */
	public abstract void doGetDataAction(TableContext context, int startIndex, int endIndex, String search, String categoryId);

	
	/**
	 * Processes get data action adding filters & ordering clauses
	 * @param context Context
	 * @param startIndex Start Index 
	 * @param endIndex End Index 
	 * @param search Search 
	 * @param categoryId Category Id 
	 * @param columnOrdering Column Ordering 
	 */
	public void doInternalGetDataAction(TableContext context, int startIndex, int endIndex, String search, String categoryId) throws Exception {
		// Local Variables
// Table does not has searchable or ordering fields
        // Call table get data
        doGetDataAction(context, startIndex, endIndex, search, categoryId);
		
	}
	

	// CUSTOM METHODS ---------------------------------------------------------


    /**
     * Remove Action
     * @param context
     * @param ids Remove row ids
     */
    public void doRemoveAction(TableContext context, Vector<String> ids) {
        // Local Variables
        Long id;
        Vector<Long> longIds = new Vector<Long>();
        for(String str : ids) {
            try {
                id = decryptDataAsLong(str);
                longIds.add(id);
            } catch (Exception e) {
                // Catch Exception
                Console.error("Error decrypting id \"" + str + "\" in table \"" + getName() + "\" remove action");
            }
        }
        // Call Id's remove action
        doRemoveAction(context, longIds);
    }


    /**
     * Remove action by Long Ids
     * @param context
     * @param ids
     */
    public abstract void doRemoveAction(TableContext context, Collection<Long> ids);


    /**
     * Set column Position color
     * @param color
     */
    public void setColumnPositionColor(SystemColor color) {
        setColumnColor(3, color);
    }


    /**
     * Set column Social color
     * @param color
     */
    public void setColumnSocialColor(SystemColor color) {
        setColumnColor(4, color);
    }


	// TABLE ACTIONS NOT USED -------------------------------------------------


	
}

