package com.merits.modules.base.backoffice.servlets;

//IMPORTS --------------------------------------------------------------------

import java.util.Vector;
import java.sql.Timestamp;

import com.weezzi.core.data.*;
import com.weezzi.core.security.sessions.SecurityAccess;
import com.weezzi.core.session.WeezziSession;
import com.weezzi.utils.extras.console.Console;
import com.weezzi.core.context.AjaxServletContext;
import com.weezzi.core.context.ServletContext;
import com.merits.core.MeritsUtils;
import com.merits.modules.base.backoffice.servlets.definitions.SimulationServletDefinition;
import com.merits.modules.base.container.BaseContainer;
import com.merits.modules.base.dao.ShopCashiersDAO;
import com.merits.modules.base.dao.ShopsDAO;
import com.merits.modules.base.dao.VolunteersDAO;
import com.merits.modules.base.uobjects.enums.MeritsUserType;

/**
 * <b>Title: </b> SimulationServlet<br/>
 * <b>Description: </b> SimulationServlet<br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
@SuppressWarnings("unused")
public class SimulationServlet extends SimulationServletDefinition {


	// SERVLET ----------------------------------------------------------------

	
	/**
	 * Initializes the servlet
	 */
	public void initializeServlet() {
		// Local Variables
		
	}

	/**
	 * Destroys the servlet
	 */
	public void destroyServlet() {
		// Local Variables
		
	}


	// PUBLIC -----------------------------------------------------------------

    /**
     * Simulate action
     */
    protected void simulate(ServletContext context, String id) throws Exception {
        // Local Variables
    	int type;
    	long itemId;
    	WeezziSession session;
    	ShopsDAO shop;
    	ShopCashiersDAO cashier;
    	VolunteersDAO volunteer;
    	String[] split = decryptData(id, context).split("_");
    	type = Integer.parseInt(split[0]);
    	itemId = Long.parseLong(split[1]);
    	// Get session
		session = context.getSession();
		// Check simulation type
    	switch(type) {
    		case 1:
    			// VOLUNTEER
    	    	volunteer = BaseContainer.getVolunteer(itemId);
    	    	if (volunteer != null) {
    	    		session.removeAccessRule(new SecurityAccess("UserType", "ShopOwner"));
    	    		session.removeAccessRule(new SecurityAccess("UserType", "ShopCashier"));
    	    		session.removeAccessRule(new SecurityAccess("UserType", "Volunteer"));
    	    		// Set session
    	    		session.addAccessRule(new SecurityAccess("UserType", "Volunteer"));
    	    		session.setSiteUserId(volunteer.getId());
    	    		if (volunteer.getPhoto() != null) {
    	    			session.setSiteUserPhotoId(volunteer.getPhoto().getFileId());
    	    		} else {
    	    			session.setSiteUserPhotoId(null);
    	    		}
    	    		session.setSiteUserDisplayName(MeritsUtils.getPersonName(volunteer));
    	    		session.setSiteUserCustomId("V" + volunteer.getId());
    	    		session.setSessionObject("WalletId", volunteer.getIdWallet());
    	    		session.setSessionObject("UserType", MeritsUserType.Volunteer);
    	    		// Check preferred language
    	    		if (volunteer.getPreferredLanguage() != null) {
    	    			session.setSiteLanguage(volunteer.getPreferredLanguage());
    	    		}
    	        	redirect(context, getPageLink(context, "Volunteers_Home"));
    	        	return;
    	    	};
    	    	break;
    		case 2:
    			// SHOP
    	    	shop = BaseContainer.getShop(itemId);
    	    	if (shop != null) {
    	    		session.removeAccessRule(new SecurityAccess("UserType", "ShopOwner"));
    	    		session.removeAccessRule(new SecurityAccess("UserType", "ShopCashier"));
    	    		session.removeAccessRule(new SecurityAccess("UserType", "Volunteer"));
    	    		// Set session
    	    		session.addAccessRule(new SecurityAccess("UserType", "ShopOwner"));
    	    		session.setSiteUserId(shop.getId());
    	    		if (shop.getPhoto() != null) {
    	    			session.setSiteUserPhotoId(shop.getPhoto().getFileId());
    	    		} else {
    	    			session.setSiteUserPhotoId(null);
    	    		}
    	    		session.setSiteUserDisplayName(shop.getName());
    	    		session.setSiteUserCustomId("S" + shop.getId());
    	    		session.setSessionObject("WalletId", shop.getIdWallet());
    	    		session.setSessionObject("UserType", MeritsUserType.Shop);
    	    		// Check preferred language
    	    		if (shop.getPreferredLanguage() != null) {
    	    			session.setSiteLanguage(shop.getPreferredLanguage());
    	    		}
    	        	redirect(context, getPageLink(context, "Shops_Home"));
    	        	return;
    	    	};
    	    	break;
    		case 3:
    			// CASHIER
    			cashier = BaseContainer.getShopCashier(itemId);
    	    	if (cashier != null) {
        	    	shop = BaseContainer.getShop(cashier.getIdShop());
    	    		session.removeAccessRule(new SecurityAccess("UserType", "ShopOwner"));
    	    		session.removeAccessRule(new SecurityAccess("UserType", "ShopCashier"));
    	    		session.removeAccessRule(new SecurityAccess("UserType", "Volunteer"));
    	    		// Set session
    	    		session.addAccessRule(new SecurityAccess("UserType", "ShopCashier"));
    	    		session.setSiteUserId(cashier.getId());
    	    		if (shop.getPhoto() != null) {
    	    			session.setSiteUserPhotoId(shop.getPhoto().getFileId());
    	    		} else {
    	    			session.setSiteUserPhotoId(null);
    	    		}
    	    		session.setSiteUserDisplayName(MeritsUtils.getPersonName(cashier.getFirstName(), cashier.getLastName()));
    	    		session.setSiteUserCustomId("C" + cashier.getId());
            		session.setSessionObject("ShopId", shop.getId());
    	    		session.setSessionObject("WalletId", shop.getIdWallet());
    	    		session.setSessionObject("UserType", MeritsUserType.Cashier);
    	    		// Check preferred language
    	    		if (shop.getPreferredLanguage() != null) {
    	    			session.setSiteLanguage(shop.getPreferredLanguage());
    	    		}
    	        	redirect(context, getPageLink(context, "Cashiers_Home"));
    	        	return;
    	    	};
    	    	break;
    	    default:
	        	redirect(context, "/");
	        	break;
    	}
    }




}
