package com.merits.modules.base.backoffice.servlets.definitions;

//IMPORTS --------------------------------------------------------------------

import java.util.Vector;
import java.sql.Timestamp;
import com.weezzi.core.data.*;

import com.weezzi.utils.extras.console.Console;

import com.weezzi.core.data.FileParameter;
import com.weezzi.core.context.AjaxServletContext;
import com.weezzi.core.context.ServletContext;
import com.weezzi.core.servlets.base.WeezziServletAction;
import com.weezzi.core.servlets.base.WeezziBackofficeServlet;
import com.weezzi.core.servlets.exceptions.WeezziServletException;


/**
 * <b>Title: </b> UtilsDefinition<br/>
 * <b>Description: </b> UtilsDefinition<br/>
 *
 * @author Auto-generated by Weezzi Site Builder
 * @version 1.0
 */
public abstract class UtilsServletDefinition extends WeezziBackofficeServlet {

	
	// CONSTANTS --------------------------------------------------------------


    protected static final String EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SHOP = "shop";
    protected static final String EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_VOLUNTEER = "volunteer";
    protected static final String EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SEARCH = "search";
    protected static final String EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_EARLIEST = "earliest";
    protected static final String EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_LATEST = "latest";


	// ACTIONS -----------------------------------------------------------------

	
    /**
     * ExportToExcel action
     */
    protected abstract void exportToExcel(ServletContext context) throws Exception;


    /**
     * ExportWalletTransactionToExcel action
     */
    protected abstract void exportWalletTransactionToExcel(ServletContext context, Long shop, Long volunteer, String search, String earliest, String latest) throws Exception;


	

	// SERVLET SPECIFIC -------------------------------------------------------

	
	/**
	 * Processes a servlet request
	 * @param context Servlet context
	 */
	public void processServletRequest(ServletContext context, WeezziServletAction servletAction) throws Throwable {
		// Local Variables
		UtilsServletAjaxActions ajaxAction;
		UtilsServletStandardActions standardAction;
		// Check if is AJAX or Standard action
		if (context.isAjaxRequest()) {
			// IS AJAX
			// Get action
			ajaxAction = (UtilsServletAjaxActions) servletAction;
			// Process actions
			try {
				switch(ajaxAction) {
				}			
			} catch(Throwable e) {
				throw new WeezziServletException(e);
			}
		} else {
			// IS STANDARD
			// Get action
			standardAction = (UtilsServletStandardActions) servletAction;
			// Process actions
			try {
				switch(standardAction) {
                    case ExportToExcel:
                        exportToExcelStandardAction(context);
                        break;
                    case ExportWalletTransactionToExcel:
                        exportWalletTransactionToExcelStandardAction(context);
                        break;
				}			
			} catch(Throwable e) {
				throw new WeezziServletException(e);
			}
		}
	}
	
	
	/**
	 * Processes a auto-complete request
	 * @param context Auto-complete context
	 */
	public AutoCompleteList processAutoCompleteRequest(ServletContext context, WeezziServletAction servletAction) throws Throwable {
		// Local Variables
		UtilsServletAutoCompleteActions action;
		// Get action
		action = (UtilsServletAutoCompleteActions) servletAction;
		// Process actions
		try {
			switch(action) {
			}			
		} catch(Throwable e) {
			throw new WeezziServletException(e);
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getStandardActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(UtilsServletStandardActions action : UtilsServletStandardActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getAjaxActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(UtilsServletAjaxActions action : UtilsServletAjaxActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}


	/**
	 * Gets a action by its string name
	 * @param actionName Action Name
	 * @return WeezziServletAction Servlet action
	 */
	public WeezziServletAction getAutoCompleteActionByPrefix(String actionName) {
		// Check actions url prefixes
		for(UtilsServletAutoCompleteActions action : UtilsServletAutoCompleteActions.values()) {
			if (action.getUrlPrefix().equals(actionName)) {
				return action;
			}
		}
		return null;
	}

	
	// ACTION INTERNAL METHODS -----------------------------------------------------


    /**
     * ExportToExcel action
     *@param context Servlet context
     */
    private void exportToExcelStandardAction(ServletContext context) throws Exception {
        // Local Variables
        // Do action
        exportToExcel(context);
    }


    /**
     * ExportWalletTransactionToExcel action
     *@param context Servlet context
     */
    private void exportWalletTransactionToExcelStandardAction(ServletContext context) throws Exception {
        // Local Variables
        Long shop;
        Long volunteer;
        String search;
        String earliest;
        String latest;
        // Get shop
        shop = getParameterAsLong(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SHOP, context);
        // Get volunteer
        volunteer = getParameterAsLong(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_VOLUNTEER, context);
        // Get search
        search = getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SEARCH, context);
        // Get earliest
        earliest = getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_EARLIEST, context);
        // Get latest
        latest = getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_LATEST, context);
        // Do action
        exportWalletTransactionToExcel(context, shop, volunteer, search, earliest, latest);
    }




	// DEBUGGING METHODS -----------------------------------------------------------


    /**
     * Debug ExportToExcel action parameters
     *@param context Servlet context
     */
    protected void debugExportToExcelStandardAction(ServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"ExportToExcel\" parameters:");
    }


    /**
     * Debug ExportWalletTransactionToExcel action parameters
     *@param context Servlet context
     */
    protected void debugExportWalletTransactionToExcelStandardAction(ServletContext context) throws Exception {
        // Debugs action parameters
        Console.debug("Debugging action \"ExportWalletTransactionToExcel\" parameters:");
        Console.debug(1, EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SHOP + ": " + getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SHOP, context));
        Console.debug(1, EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_VOLUNTEER + ": " + getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_VOLUNTEER, context));
        Console.debug(1, EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SEARCH + ": " + getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_SEARCH, context));
        Console.debug(1, EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_EARLIEST + ": " + getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_EARLIEST, context));
        Console.debug(1, EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_LATEST + ": " + getParameter(EXPORTWALLETTRANSACTIONTOEXCELACTION_PARAMETER_LATEST, context));
    }



}
